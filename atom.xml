<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Блог, милый блог. Новая история каждый будний день.</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Накладываем швы на ActiveRecord::SchemaDumper</title>
        <description>
          
          &lt;p&gt;В рейлс &lt;code&gt;primary key&lt;/code&gt; - желательно делать &lt;code&gt;id&lt;/code&gt;, формально конечно можно поставить что-то другое, но
гарантия заканчивается очень быстро. У нас в одном проекте сделали ключом &lt;code&gt;uuid&lt;/code&gt; и конечно же сломался дамп
схемы. Где сломался дамп схемы, там сломались тесты и вообще не хорошо все это.&lt;/p&gt;

&lt;p&gt;Иногда получается вставить аккуратный монкей-патч, но тут нужно было фиксить увесистый приватый метод 
&lt;code&gt;ActiveRecord::SchemaDumper#table&lt;/code&gt;. Обычно я делаю так:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Добавляю файл в &lt;code&gt;config/initializers&lt;/code&gt;, обычно это достаточно удачное время&lt;/li&gt;
&lt;li&gt;Копирую подопытный метод целиком, по возможности с условиями: &lt;code&gt;if defined?(ActiveRecord::SchemaDumper) ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Обязательно ставлю ассерт на текущую версию рейлс &lt;code&gt;raise &amp;quot;review and update this patch for Rails upgrade&amp;quot; if Rails.version != &amp;quot;4.2.8&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Каждое вмешательство оформляю ярко, примерно так:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;c1&quot;&gt;##### [BEGIN PATCH 2]&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# # original code&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# next if column.name == pk&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# @connection.column_spec(column, @types)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# # patched code&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;uuid&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;primary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;primary: true&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##### [END PATCH 2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В данном случае удалось обойтись тремя швами и схема как новенькая.&lt;/p&gt;

        </description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/28/protez/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/28/protez/index.html</guid>
      </item>
    
      <item>
        <title>Глубоководные работы</title>
        <description>
          
          &lt;p&gt;Недавно друг сказал в беседе полностью серьезно: &amp;quot;эпоха ботов, конечно уже прошла,
месяцев 8 назад ...&amp;quot; Я не очень помню, что дальше было, но эта фраза очень позабавила.
И действительно
боты очень ярко сверкали на каждом ресурсе совсем недавно, а сейчас стали где-то рабочим инструментом,
где-то не стали, но шума однозначно производят сильно меньше.&lt;/p&gt;

&lt;p&gt;В такой среде, где эпоха уходит за 8 месяцев, может напасть уныние и для этого есть все основания.
В принципе, читая любую, самую свежую техническую статью, нужно понимать, что она уже устарела. Вместе
с технологией.&lt;/p&gt;

&lt;p&gt;Пока я нашел такое лекарство. Технологии я не оцениваю с точки зрения новизны, а стараюсь просто погрузится
в суть чуть глубже, чем требует задача. И в этом есть удовольствие и от работы со старыми,
 и с новыми технологиями.
Принципы реально остаются одинаковые, и старые вещи, часто действительно бывают более матерые и надежные,
зато новые однозначно
более прогрессивные и залихватские.&lt;/p&gt;

&lt;p&gt;Осилив одну глубину, вторая дается гораздо легче, а радует также.
Из свеженького, в одной
задумке мне пригодится утилита &lt;code&gt;script&lt;/code&gt;, ей 100500 лет, но конечно я про нее никогда до этого не слышал.
Знаете такую? Если идея выгорит - расскажу.&lt;/p&gt;

        </description>
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/27/glub/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/27/glub/index.html</guid>
      </item>
    
      <item>
        <title>Цифровой бардак, здравствуй, это я</title>
        <description>
          
          &lt;p&gt;Довольно много
времени назад гмейл предложил забить на папки и складывать письма в большую кучу. Немного посомневавшись,
я принял его
предложение.
Дела веду
в тудуисте, в трелло, на бумажках у компа, в гугл-доках, немножко есть файлов в яндекс-диске,
в гугл драйве, рабочем и личном, в дропбоксе, какие-то няшки валяются в еверноте, который уже не открывал
несколько месяцев, и наверняка где-то еще.&lt;/p&gt;

&lt;p&gt;Прозрение, что мир бардака окончательно поглотил человечество, наступило сегодня,
когда решил упорядочить контакты.
Вообще контакты от гугла весьма странная программа, она подтягивает какой-то шлак из гугл плюса (WTF,
почему это еще живо), плохо находит дубли и из настроек можно выбрать только сортировку по имени или
фамилии.
И вдруг понял, что в современном мире не надо и невозможно держать единый список контактов. Всегда
без проблем можно найти человека в телеграмме, вотсаппе, фейсбуке или твиттере, а может быть по профилю
гитхаба, в слеке или еще где.&lt;/p&gt;

&lt;p&gt;Современный цифровой мир - ад для перфекциониста старой школы, любителя каталогизации
и систематизации. Но я вылечился. Раз так, значит так. Буду смотреть, как дальше пойдет.&lt;/p&gt;

        </description>
        <pubDate>Fri, 24 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/24/bardak/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/24/bardak/index.html</guid>
      </item>
    
      <item>
        <title>Black Black Rsync Magic</title>
        <description>
          
          &lt;p&gt;На днях переносил террабайт пдфок с одного сервера на другой. Генетическая
память подсказывала, что &lt;code&gt;rsync -avP --del&lt;/code&gt; неплохой выбор. Решил для надежности посмотреть хелп:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ rsync --help | grep -- &amp;#39;-a&amp;#39;
 -a, --archive     archive mode; equals -rlptgoD (no -H,-A,-X)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Я люблю консоль, но иногда, конечно, с изысканности утилит мне становится очень смешно.
rlptgoD вам, no HAX, братишки! А мы еще
даже не разобрались с комбинаторикой слешей в путях &lt;img class=&#39;emoji&#39; title=&#39;:scream_cat:&#39; alt=&#39;:scream_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f640.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;, IDDQD.&lt;/p&gt;

        </description>
        <pubDate>Thu, 23 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/23/rsync/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/23/rsync/index.html</guid>
      </item>
    
      <item>
        <title>Маленькая гениальная штучка в прометее</title>
        <description>
          
          &lt;p&gt;При настройке прометея через сервис дискавери консула
поле &lt;code&gt;__meta_consul_tags&lt;/code&gt; состоит из тегов, перечисленных
через запятую. Внимание, с дополнительными запятыми в начале и в конце строки! &lt;img class=&#39;emoji&#39; title=&#39;:scream_cat:&#39; alt=&#39;:scream_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f640.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;
То есть массив тегов &lt;code&gt;[job-A, job-B]&lt;/code&gt; превращается в строку &lt;code&gt;,job-A,job-B,&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Это нужно для более легкой настройки релейбелинга, когда вхождение тега мы можем искать
по простому регекспу &lt;code&gt;.*,job-A,.*&lt;/code&gt;, не отвлекаясь на отсутствие запятой вначале или в конце
строки, как было бы в случае простого &lt;code&gt;join(&amp;quot;,&amp;quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Про эту штуку узнал из статьи &lt;a href=&quot;https://www.robustperception.io/little-things-matter/&quot;&gt;Little Things Matter&lt;/a&gt; и испытал огромное эстетическое удовольствие. И да, мы это используем в продакшене.&lt;/p&gt;

        </description>
        <pubDate>Wed, 22 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/22/role/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/22/role/index.html</guid>
      </item>
    
      <item>
        <title>Хероку</title>
        <description>
          
          &lt;p&gt;Мне хорошо запомнилась цитата из группы &lt;code&gt;ror2ru&lt;/code&gt;, что Хероку - для олигархов.
Я себя никогда не чувствовал и не
чувствую принадлежащим к этой группе людей, поэтому мне потребовались весьма значительные
усилия, чтобы решить держать там наши первые продакшены.&lt;/p&gt;

&lt;p&gt;В Хероку мы доросли до весьма солидных сумм в месяц, но это было несоизмеримо дешевле, чем если
бы нам тогда пришлось бы, кроме всего прочего, еще и возиться с серверами, бэкапами, мониторингом.
Поэтому Хероку - не для олигархов, а, как мне кажется, весьма правильный выбор,
даже сегодня, для любой компании,
которой уже требуется код, но нет еще каких-то космических задач.&lt;/p&gt;

&lt;p&gt;В цифрах, я бы сказал, что если прайс меньше 1000$ в месяц, нагрузки меньше 100 запросов в секунду,
база не больше 50Гб, а также нет требований о персоналке, то Хероку - идеален.&lt;/p&gt;

        </description>
        <pubDate>Tue, 21 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/21/se/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/21/se/index.html</guid>
      </item>
    
      <item>
        <title>docker run -p A:B vs git - 1:1</title>
        <description>
          
          &lt;p&gt;Запускать докер контейнеры я учился из интернета, в 99% статей это выглядит как-то так &lt;code&gt;docker
run -p 80:80 nginx&lt;/code&gt;, поэтому часто путал какой порт отвечает за хост, а какой за контейнер. Когда
они отличались, то решал задачу так же, как флешка вставляется в USB-порт, суперпозицией поворотов.&lt;/p&gt;

&lt;p&gt;Запомнить очень просто: &lt;code&gt;80:80&lt;/code&gt; - это сокращенная запись &lt;code&gt;hostIP:hostPort:containerPort&lt;/code&gt;, то есть
если я хочу повесить рейлс контейнер на &lt;code&gt;8080&lt;/code&gt;-й порт для интерфейса &lt;code&gt;192.168.12.27&lt;/code&gt;, то так и пишу:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;docker run -p 192.168.12.27:8080:3000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;либо, если интерфейс не важен, то команда - &lt;code&gt;docker run -p 8080:3000&lt;/code&gt;. Теперь не путаюсь.&lt;/p&gt;

&lt;p&gt;PS. жуткая команда для удаления ветки &lt;code&gt;git push origin :branch&lt;/code&gt; становится понятной, когда узнаешь, что
&lt;code&gt;git push origin branchA:branchB&lt;/code&gt;, отправляет локальную &lt;code&gt;branchA&lt;/code&gt; в &lt;code&gt;branchB&lt;/code&gt; на сервере, и если
отправить &amp;quot;пустоту&amp;quot; в серверную ветку &lt;code&gt;branch&lt;/code&gt;, то это будет равносильно удалению &lt;code&gt;branch&lt;/code&gt; на сервере.&lt;/p&gt;

        </description>
        <pubDate>Mon, 20 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/20/docker_ports/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/20/docker_ports/index.html</guid>
      </item>
    
      <item>
        <title>Скрипт целостности</title>
        <description>
          
          &lt;p&gt;На конференции я обещал выложить скрипт, который сравнивает DNSimple, Селектел и состояния терраформов.
Это не один скрипт, а несколько. Конечно они без комментариев и повышенной ламповости. Я вырезал
кое-что, но вот этот набор скриптов в целом должен работать, по крайней мере на наших данных запускается:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/avakhov/0ba88970111f20ced7c970d1d30516f2&quot;&gt;https://gist.github.com/avakhov/0ba88970111f20ced7c970d1d30516f2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Идея в том, что есть &lt;code&gt;backup_*&lt;/code&gt; скрипты, которые дампят в текстовом виде разные параметры системы.
Мы эти файлы храним в приватном репозитарии и я даже иногда поглядываю на изменения, кто
там что поменял. Далее запускается скрипт &lt;code&gt;check&lt;/code&gt;, вывод которого выглядит примерно так:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2/tc.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;То есть с днс-записями на картинке порядок, а вот состояние-терраформа кто-то не сдал.&lt;/p&gt;

&lt;p&gt;У нас таких &lt;code&gt;backup-*&lt;/code&gt; скриптов больше, но остальные решают еще более частные задачи.
Например, там есть проверка того, что
ночные бэкапы собрались и всякие другие штуки. Вот этот набор скриптов нам очень-очень помогает,
но я не знаю как их правильно обернуть, чтобы они помогли еще кому-нибудь. Если у вас есть идеи - буду
рад обсудить!&lt;/p&gt;

        </description>
        <pubDate>Fri, 17 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/17/integrity/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/17/integrity/index.html</guid>
      </item>
    
      <item>
        <title>Коллеги, я удалил сервер с VPN</title>
        <description>
          
          &lt;p&gt;Недавно замечательным терраформом грохнул несколько серверов, дело было так.
В файле &lt;code&gt;var.tf&lt;/code&gt; лежала переменная с ID-образа убунты примерно так &lt;code&gt;UBUNTU_IMAGE_ID = &amp;#39;cde3892-...&amp;#39;&lt;/code&gt;.
Я решил обновить образ на свежий и не прочитал, что написал &lt;code&gt;terraform plan&lt;/code&gt;, а зря. Терраформ, когда
у диска меняется переменная &lt;code&gt;image_id&lt;/code&gt;, пересоздает диск. Поэтому сервер на новом
образе я конечно создал, но еще заодно обновил старые сервера. Хорошо, что базы были на другом образе,
а так
бы веселья было чуть больше.&lt;/p&gt;

&lt;p&gt;Сейчас мы страхуемся тем, что в каждый диск копипастим конкретное значение в &lt;code&gt;image_id&lt;/code&gt;, &lt;code&gt;Ctrl-C Ctrl-V&lt;/code&gt; - рулят.&lt;/p&gt;

        </description>
        <pubDate>Thu, 16 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/16/terrafail/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/16/terrafail/index.html</guid>
      </item>
    
      <item>
        <title>Ansible Variables</title>
        <description>
          
          &lt;p&gt;В ансибл круто сделано, что можно передать переменную в очень многих слоях, как минимум в
&lt;code&gt;roles/vars&lt;/code&gt;, &lt;code&gt;roles/default&lt;/code&gt;, &lt;code&gt;group_vars&lt;/code&gt; и тд. И даже можно передать через командную строку.
Как-то захотел передать &lt;code&gt;false&lt;/code&gt;, попробовал так:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ansible-playbook system.yml --tags vpn --e vpn_fetch=false
ansible-playbook system.yml --tags vpn --e vpn_fetch=False
ansible-playbook system.yml --tags vpn --e vpn_fetch=no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;но сработал только вариант с JSON:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ansible-playbook system.yml --tags vpn --e &amp;#39;{&amp;quot;vpn_fetch&amp;quot;:false}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Далее этот флажок обрабатывается в роли привычным образом:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;- include: fetch.yml
  when: not vpn_fetch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        </description>
        <pubDate>Wed, 15 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/15/ansib/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/15/ansib/index.html</guid>
      </item>
    
  </channel>
</rss>
