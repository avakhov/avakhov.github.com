<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Блог, милый блог. Новая история каждый будний день.</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Учи.ру - Руби он Рейлс разработчик</title>
        <description>
          
          &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; реклама, за пост сказано щедрое спасибо.&lt;/p&gt;

&lt;p&gt;В рамках очередного расширения наши великолепные эйчары попросили прорекламировать ваканcию Руби он Рейлс
разработчика, что с удовольствием и делаю.
&lt;a href=&quot;https://hh.ru/vacancy/19665067&quot;&gt;Здесь можно посмотреть официальную версию&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Про социальную часть наших продуктов лучше узнать на сайте,
в разделе &lt;a href=&quot;https://uchi.ru/smi-o-nas&quot;&gt;СМИ о нас&lt;/a&gt;, 
либо зарегистрироваться на сайте и позаниматься самостоятельно, либо поинтересоваться
у детей школьного возраста из вашего окружения, возможно, они уже занимаются на Учи.ру или
принимали участие в наших онлайн-олимпиадах.&lt;/p&gt;

&lt;p&gt;Компания действительно социально заряженная, я бы об этом мог много рассказать,
но лучше опишу профиль работы с
технической точки зрения.
Прежде всего это, конечно, Рейлс, сегодня он составляет 99% нашего бэкенда (и оставшийся 1% - тоже он). Но
на другие технологии тоже смотрим очень внимательно. Мы не гонимся за самым свежим день в день,
скорее держимся во второй-третьей волне прогресса, и точно не внедряем технологий только
потому, что они модные, прикольные и у всех уже три дня в продакшене.&lt;/p&gt;

&lt;p&gt;Итак, что у нас есть:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Актуальные версии рейлс, руби, постгрес, эластик на сервере.&lt;/li&gt;
&lt;li&gt;Бутстрап, реакт, вебпак и прочее в разнообразных комбинациях, приправленные jQuery на клиенте.&lt;/li&gt;
&lt;li&gt;Потрясающие дизайнеры и иллюстраторы, профессиональные верстальщики и фронты (верстать самому можно, только если вы сами очень сильно захотите).&lt;/li&gt;
&lt;li&gt;Приличные нагрузки в 500-800 запросов в секунду на продакшенах, то есть сверхтонкие оптимизации проводить нам пока еще не нужно, но мощь трафика и размеры баз будете ощущать очень хорошо.&lt;/li&gt;
&lt;li&gt;Работа в компактных, самодостаточных командах, где вы сами выбираете уровень вовлеченности в процесс. Можно настроить продакшен самостоятельно с помощью терраформа и ансибла или же сконцентрироваться только на коде и задачах бизнеса. В рамках наших открытых уроков и мероприятий очень рекомендую сходить в школу и
посмотреть, как работает продукт в реальных условиях и кто наши пользователи.&lt;/li&gt;
&lt;li&gt;Мы продуктовая компания, у нас нет разработки &amp;quot;в стол&amp;quot; или для галочки, каждую вашу фичу увидят сотни и тысячи детей, учителей, родителей, причем очень быстро. &lt;a href=&quot;https://guides.github.com/introduction/flow/&quot;&gt;Гитхаб флоу&lt;/a&gt; великолепен! Ветка, автоматически выкатывается шот, тестирование, ревью, апрув от бизнеса, мерж и продакшен!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Присылайте свои резюме, комментарии и вопросы
Евгении Христолюбской &lt;a href=&quot;mailto:christolubskaya@uchi.ru&quot;&gt;christolubskaya@uchi.ru&lt;/a&gt;.
Буду рад новым коллегам &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Tue, 21 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/21/vacancy/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/21/vacancy/index.html</guid>
      </item>
    
      <item>
        <title>Количество запросов</title>
        <description>
          
          &lt;p&gt;Мы перешли с заббикса на прометей несколько месяцев назад, очень-очень довольны.
Я планирую в течение месяца заопенсорсить cкрипт для графаны, который помогает
создавать и поддерживать дешборды из простого yml-описания, но пока просто пример,
как можно добавить измерение запросов в секунду:&lt;/p&gt;

&lt;p&gt;1) тюним формат NGINX-логов:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;nginx&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;nginx_http_params&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;log_format combined_plus &amp;#39;$host $remote_addr - $remote_user [$time_local] &amp;#39;&lt;/span&gt;
       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;#39;&amp;quot;$request&amp;quot; $status $body_bytes_sent $request_time &amp;#39;&lt;/span&gt;
       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;&amp;#39;&amp;quot;$http_referer&amp;quot; &amp;quot;$http_user_agent&amp;quot; &amp;quot;$content_type&amp;quot;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;access_log &amp;quot;/var/log/nginx/access.log&amp;quot; combined_plus&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2) запускаем nginx-exporter (можно взять вот этот &lt;a href=&quot;https://github.com/ndiazg/nginx-prometheus-exporter&quot;&gt;ndiazg/nginx-prometheus-exporter&lt;/a&gt; за основу):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;nginx_prometheus_exporter&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker_container&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;nginx-prometheus-exporter&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;started&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;nginx-prometheus-exporter&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;restart_policy&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;unless-stopped&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/var/log/nginx/access.log&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/var/log/nginx:/var/log/nginx:ro&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;3093:3093&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3) Добавляем метрику (с помощью магического скрипта):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sum(rate(http_requests_total{job=&amp;quot;nginx&amp;quot;,vhost=&amp;quot;uchi.ru&amp;quot;}[1m])) by (instance)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4) PROFIT:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/18/4a.png&quot;&gt;&lt;/p&gt;

        </description>
        <pubDate>Tue, 21 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/21/prom/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/21/prom/index.html</guid>
      </item>
    
      <item>
        <title>Консул</title>
        <description>
          
          &lt;p&gt;Архитектура &lt;a href=&quot;http://consul.io&quot;&gt;консула&lt;/a&gt; мне очень сильно напоминает организацию современной IT-компании. В каждом датацентре (продукте), есть 3 сервера (например техлид, главный дизайнер и пиэм), задача которых входить в кворум (договариваться друг с другом)
и держать
каталог (быть источником правды). Cервера разных ДЦ общаются между собой, реализуя сермяжную правду, ценность и миссию организации.&lt;/p&gt;

&lt;p&gt;В Учи.ру, мы медленно дрейфуем в сторону докеров, оркестрации, вот этого всего
и скоро отрапортую о блестящей
победе или сокрушительном поражении, или о невнятной ничье.&lt;/p&gt;

        </description>
        <pubDate>Mon, 20 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/20/teams/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/20/teams/index.html</guid>
      </item>
    
      <item>
        <title>Ансибл потек</title>
        <description>
          
          &lt;p&gt;На днях нашел забавный дефект в ансибл. В официальном образе консула &lt;a href=&quot;https://github.com/hashicorp/docker-consul/blob/master/0.X/docker-entrypoint.sh#L48&quot;&gt;есть возможность&lt;/a&gt; передать
конфигурацию в переменной окружения:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker_container&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;consul&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;agent -server&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; 
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;CONSUL_LOCAL_CONFIG&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;{&amp;quot;skip_leave_on_interrupt&amp;quot;:true,...}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Это хорошо работает, но если передать в конфиг переменную
&lt;code&gt;CONSUL_LOCAL_CONFIG: &amp;#39;{&amp;quot;bind&amp;quot;:&amp;quot;&amp;#123;{ip}}&amp;quot;,...}&amp;#39;&lt;/code&gt;, то ансибл в окружение
контейнера передает строку с одинарными кавычками вместо двойных
и естественно консул не запускается, так-как &lt;code&gt;{&amp;#39;bind&amp;#39;:&amp;#39;...&lt;/code&gt; - это уже не JSON. Что-то
где-то там внутри замыкает.&lt;/p&gt;

        </description>
        <pubDate>Fri, 17 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/17/ansible/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/17/ansible/index.html</guid>
      </item>
    
      <item>
        <title>Rails + PostgreSQL = крутота</title>
        <description>
          
          &lt;p&gt;Дисклеймер: напоминаю, что говоря Рейлс, я обычно всегда подразумеваю любой современный веб-фреймворк, который вы знаете. Как известно
лучший дистрибутив линукса - это тот, который установлен у вашего друга-гуру, просто так получилось, что мой линукс - это Рейлс.&lt;/p&gt;

&lt;p&gt;Так вот, недавно, объясняя одному js-коллеге почему нужно сразу начать работать на Rails + PostgreSQL и не
тратить время на Rails + SQLite, понял одну вещь. Мои тестовые задание по C++ очень сильно не походили на то, что я увидел
на работе. Мой C++ был как в книжках, а реальный C++ оказался совсем, полностью не книжным.&lt;/p&gt;

&lt;p&gt;В тоже время код любого современного рейлс-приложения
очень сильно похож на Depot App из &lt;a href=&quot;https://pragprog.com/book/rails5/agile-web-development-with-rails-5&quot;&gt;Rails Agile development&lt;/a&gt;.
Счастливые новые программисты с первых же дней получают в руки очень профессиональные и бесплатные 
инструменты, которые из коробки держат десятки запросов в секунду, превращающиеся в сотни
и тысячи при минимальном допиливании.  В этом я немного завидую тем, кто делает свои первые
шаги в профессии сейчас.&lt;/p&gt;

        </description>
        <pubDate>Thu, 16 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/16/enterpraise/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/16/enterpraise/index.html</guid>
      </item>
    
      <item>
        <title>Пластиковый код</title>
        <description>
          
          &lt;p&gt;Когда смотришь на 100-мегабайтную папку &lt;code&gt;node_modules&lt;/code&gt; для простого реакт-приложения,
то становится понятно, что ни о каком красивом коде, что бы это не значило, мечтать не приходится.
Любая красота будет работать на таких слоях, не по-боюсь этого слова, не очень красивого кода, что
овчинка не будет стоить выделки.&lt;/p&gt;

&lt;p&gt;И вообще костыли были всегда, начиная от хаков в кристале, в коде OS, в компляторах,
библиотеках, прикладном коде и даже
в визуальном восприятии, как делали игрушки, которые работали с разрешеним 320x200.
Просто раньше время жизни
кода было большое, архитектура строилась увесистыми слоями, умные люди программировали на сложных
языках и костыли были хромированными и олдскульными. Сейчас, в вебе по-крайней мере, микросервисы,
докеры всякие, код режется не в полоску, а в мелкую клетку, в моде - пластиковые, практичные, одноразовые
костыли. Вот и вся разница.&lt;/p&gt;

&lt;p&gt;Классические архитектурные паттерны на руби, пхп, питоне для разработки очередного веб-проекта - это
монеты эпохи Николая 2, сделанные в девяносто пятом.&lt;/p&gt;

        </description>
        <pubDate>Wed, 15 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/15/plastik/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/15/plastik/index.html</guid>
      </item>
    
      <item>
        <title>DevOpsDays Moscow</title>
        <description>
          
          &lt;p&gt;Собрался тут выступить на
&lt;a href=&quot;https://www.devopsdays.org/events/2017-moscow/program/vakhov/&quot;&gt;DevOpsDays Moscow&lt;/a&gt;,
буду рассказывать, как Учи.ру выросла с одного маленького рейлс приложения до весьма развесистого
сервиса на 1М+ пользователей.&lt;/p&gt;

&lt;p&gt;По ТТХ у нас рабочая нагрузка 600-800 запросов в секунду на главных продакшенах,
100+ серверов (суммарно для всех проектов), база гигов на 200. То есть
размах относительно умеренный для индустрии, но достаточный для того чтобы столкнутся с большим
количеством разнообразных проблем.&lt;/p&gt;

&lt;p&gt;Задачи, которые возникали при быстром росте, постоянно
увеличивающейся сложность системы, инструменты и подходы, которые мы пробовали и к какому стеку в
конечном счете пришли, вот про это все и буду рассказывать. Буду рад встрече, если кто пойдет &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;,
кодовое слово: &amp;quot;блог&amp;quot;.&lt;/p&gt;

        </description>
        <pubDate>Tue, 14 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/14/ddd/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/14/ddd/index.html</guid>
      </item>
    
      <item>
        <title>Порт 5000</title>
        <description>
          
          &lt;p&gt;Запустил тут рейлс сервер в &lt;a href=&quot;https://github.com/ddollar/foreman&quot;&gt;форемане&lt;/a&gt; и удивился, что сервер
запускается на порту 5000 вместо привычного 3000. Довольно быстро, понял, что фореман
выдает порты своим приложениям, переопределяя переменную окружения &lt;code&gt;PORT&lt;/code&gt;. То есть такой прокфайл:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Procfile
web: rails s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;запустит приложение на порту 5000, а такой:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;web: PORT=3000 rails s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;вернет сервер на привычные 3000.&lt;/p&gt;

&lt;p&gt;В этой всей истории меня смутило, почему я раньше эту штуку не видел. Поковырявшишь в истории
комитов, нашел нужный &lt;a href=&quot;https://github.com/rails/rails/commit/306c14c4113&quot;&gt;306c14c4113&lt;/a&gt;, поддержка &lt;code&gt;PORT&lt;/code&gt; была добавлена
только в рейлс 5, поэтому и не видел. Душевное равновесие восстановлено.&lt;/p&gt;

&lt;p&gt;PS. Переменная &lt;code&gt;PORT&lt;/code&gt; стандартная для хероку, но пока рейлс не обращал внимания на эту переменную, вопрос решался магией
билдпаков &lt;a href=&quot;https://github.com/heroku/heroku-buildpack-ruby/blob/master/lib/language_pack/rails4.rb#L27&quot;&gt;rails4.rb&lt;/a&gt;.&lt;/p&gt;

        </description>
        <pubDate>Mon, 13 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/13/5000/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/13/5000/index.html</guid>
      </item>
    
      <item>
        <title>50%</title>
        <description>
          
          &lt;p&gt;Полгода блого-челенджа как не бывало, экватор! Ура!&lt;/p&gt;

&lt;p&gt;В какой-то книге читал про любопытный психологический эксперимент, который
немного объясняет почему так трудны всякие зароки, новые жизни с понедельника и другие волевые штуки.&lt;/p&gt;

&lt;p&gt;Ученые-психологи намешали какой-то формально съедобной, но мерзкой штуки - перца острого насыпали, слизи какой-то,
и начали задавать добровольцам каверзные вопросы.
Какое максимальное количество этого грызлодера вы бы максимально смогли принять сейчас, сколько бы смогли через месяц,
и сколько сможет употребить тот чел в красном свитере.&lt;/p&gt;

&lt;p&gt;Оказалось, что когда речь идет о настоящем времени,
то люди достаточно консервативно
оценивают свои силы и останавливаются скажем на одной ложке. Парня в красном свитере, они готовы накормить двумя стаканами
зелья. Ну это понятно, схоже оценке чужой работы - гиганская ошибка наблюдения, всем кажется, что работают только они, остальные
фейсбучик листают.&lt;/p&gt;

&lt;p&gt;Но самое интересное в этом опыте, что люди страшно переоценивали себя
в будущем! Почти так же как чужого. Нам свойственно считать, что &amp;quot;я завтрашний&amp;quot; будет вовремя просыпаться, делать
зарядку, что он найдет время, которое мы не нашли сегодня. Конечно это не так и &amp;quot;я завтрашний&amp;quot; чаще всего такой же, как
&amp;quot;я сегодняшний&amp;quot;.&lt;/p&gt;

&lt;p&gt;Поэтому в любом челендже и обязательстве стоит учесть, что подумает про вас тот чувак, которым будете вы через полгода.
Я вот разное подумал про того Алексея из августа 2016. И хорошее и не очень &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Fri, 10 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/10/50/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/10/50/index.html</guid>
      </item>
    
      <item>
        <title>Знания нулевой ценности</title>
        <description>
          
          &lt;p&gt;В программировании есть много вещей, которые я последнее время вполне осознанно стараюсь избегать. Это какие-то очень
конкретные вещи, которые исчезнут в ближайший год, два, три или уже исчезли. Сейчас приведу примеры, чтобы стало понятно:&lt;/p&gt;

&lt;p&gt;На одном из серверов у нас почему-то поставился пермишен &lt;code&gt;777&lt;/code&gt; на папку &lt;code&gt;.gems&lt;/code&gt; и руби интерпретатор начинает выдавать &lt;code&gt;Insecure world writable dir...&lt;/code&gt; что-то там, ошибка легко гуглится. Скриптец на руби, который выдает &lt;code&gt;JSON&lt;/code&gt;, стал давать невалидный результат, так как первая
строка стала ворнингом. Пермишен поправили - ошибка ушла. Я уверен, что это длинный хвост ошибок и мы с ней никогда больше не
встретимся.&lt;/p&gt;

&lt;p&gt;Или вот гайд по &lt;a href=&quot;https://webpack.js.org/guides/hmr-react/&quot;&gt;Hot Module Replacement - React&lt;/a&gt;. Там предлагается поставить:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install .. react-hot-loader@3.0.0-beta.6 webpack@2.1.0-beta.25 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Вот именно так, какие-то очень конкретные версии пакетов. И это не зря, если брать свежие версии пакетов, то HMR не работает.
И мне лень разбираться почему, так как это все умрет. (Мой любимый пакет &lt;code&gt;react-hot-loader@3.0.0-beta.6&lt;/code&gt;, вообще стабильная
версия &lt;code&gt;1.1.3&lt;/code&gt;, есть пучок альф &lt;code&gt;2.*&lt;/code&gt; и вот шестая бета третьей версии. Все пользуются, хорошая &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;)&lt;/p&gt;

&lt;p&gt;Я когда-то знал отличия Visual Studio 6, от 2013-й (2013 наконец-то стала поддерживать почти полностью шаблоны, как в стандарте,
а 6-я была шустрая и ламповая) - и вот зачем мне это сейчас? Поэтому, сегодня, стараюсь проскользнуть мимо отличий ансибла
2.0 и 2.2 (у нас часть рецептов собирается только одной версией, часть только другой, надо фиксить, но это другая история), я ни хочу
вникать в чем разница &lt;code&gt;es6&lt;/code&gt; от &lt;code&gt;es7&lt;/code&gt;, или где проходит граница руби и рейлс на каждой версии того и другого.
В современном мире это все не очень важно.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; Почему-то пост не опубликовался утром, хотя хук сработал! Залил пост вручную только в 13:40. Спасибо &lt;a href=http://evtuhovich.ru&gt;Ивану&lt;/a&gt; за бдительность, &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;!&lt;/p&gt;

        </description>
        <pubDate>Thu, 09 Feb 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/02/09/zero/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/02/09/zero/index.html</guid>
      </item>
    
  </channel>
</rss>
