<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Tech addicted</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Лига лени в гит-конфиге</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/lazy-git/main.jpg&quot; /&gt;
          &lt;p&gt;Чем старше я, тем ленивей становлюсь. Боюсь представить, что будет дальше.&lt;/p&gt;

&lt;p&gt;Недавно в моем &lt;code&gt;.gitconfig&lt;/code&gt; появилась команда, которую я стараюсь использовать пореже... Но она такая клевая... &lt;img class=&#39;emoji&#39; title=&#39;:heart_eyes_cat:&#39; alt=&#39;:heart_eyes_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63b.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;k&quot;&gt;[alias]&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# перенес на несколько строк для наглядности, в оригинале она у меня в одной&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;!(git add -A . &amp;amp;&amp;amp; &lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        git commit -amsaved_at_`date +%Y-%m-%d__%H:%M:%S` &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        git pull --rebase &amp;amp;&amp;amp; git push &amp;amp;&amp;amp; &lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        echo &amp;quot;&amp;quot; &amp;amp;&amp;amp; git log -1 --stat) || git pull --rebase&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Команда комитит и пушит все что есть, а также подтягивает свежие изменения.&lt;/p&gt;

&lt;!--- Я люблю регулярные сохранения, например блог сохраняю после каждой записи и почти после каждой правки, уже на автомате. А кого можно обмануть десяти командами `git -amfix` подряд? ---&gt;

&lt;p&gt;Название алиаса от слова &lt;code&gt;sYnc&lt;/code&gt;. Букву &lt;code&gt;s&lt;/code&gt; я не стал использоваться, чтобы
не путать с &lt;code&gt;git st&lt;/code&gt; =&amp;gt; &lt;code&gt;git status&lt;/code&gt;.&lt;/p&gt;

        </description>
        <pubDate>Fri, 19 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/19/lazy-git/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/19/lazy-git/index.html</guid>
      </item>
    
      <item>
        <title>Бдительность не бывает лишней</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/alarm/main.jpg&quot; /&gt;
          &lt;p&gt;Как-то раз я копировал postgres-базу с продакшена на тестовый сервер.&lt;/p&gt;

&lt;p&gt;Продакшен работал уже на версии 9.4 и там даже добавили таблицу с jsonb-колонкой, тестовый сервер был
все еще 9.3. Этот факт у меня был где-то на краю сознания, поэтому я решил проверить как перенеслась
эта таблица.&lt;/p&gt;

&lt;p&gt;Правильный ответ - таблица никак не перенеслась, она просто не создалась.
Наверняка &lt;code&gt;pg_restore&lt;/code&gt; об этом
написал, но обычно его вывод выглядит примерно так, поэтому я не заметил:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2/alarm/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Мораль это истории такова: не стоит терять бдительность при переносе базы, мало ли что.&lt;/p&gt;

        </description>
        <pubDate>Thu, 18 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/18/alarm/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/18/alarm/index.html</guid>
      </item>
    
      <item>
        <title>Как помыть слона</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/watch-the-slon/main.jpg&quot; /&gt;
          &lt;p&gt;Иногда накатывает настроение, когда кажется что все плохо, куча критичных проблем, невыполненных обещаний и непонятно за что хвататься.&lt;/p&gt;

&lt;p&gt;В такие моменты обычно вспоминаю замечательную книгу &lt;a href=&quot;http://uibook2.usethics.ru&quot;&gt;Дизайн пользовательского интерфейса. Искусство мыть слона&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Чтобы хорошо вымыть слона, очень полезно начинать с самой
грязной его части, иначе к концу мытья грязь успеет снова распространиться по слону.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Поэтому я выписываю все нерешенные вопросы в список, нахожу самый гнусный и стараюсь
решить его хотя бы чуть-чуть. Обычно отпускает.&lt;/p&gt;

        </description>
        <pubDate>Wed, 17 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/17/watch-the-slon/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/17/watch-the-slon/index.html</guid>
      </item>
    
      <item>
        <title>Коварный backtick или как определить размер используемой памяти</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/back-tick/main.jpg&quot; /&gt;
          &lt;p&gt;В одном жирненьком руби-воркере мы логировали размер памяти, которую расходует процесс, с
помощью команды &lt;code&gt;&amp;#96;ps -o rss -p #{$$}&amp;#96;&lt;/code&gt;. Такой способ легко найти в интернете и он обычно работает.&lt;/p&gt;

&lt;p&gt;Однако сам &lt;code&gt;Kernel#`&lt;/code&gt; сделан так, что он форкает руби процесс,
соответственно на доли секунды резервируя еще столько же памяти, сколько
процесс занимает уже. Наш воркер в ходе работы раздувался до 2.5-3GB и начал падать на 4GB оперативной памяти.&lt;/p&gt;

&lt;p&gt;Я подсмотрел как сделано в ньюрелике (файл &lt;code&gt;new_relic/agent/samplers/memory_sampler.rb&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;proc_status_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/proc/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/status&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;proc_status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proc_status_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_nonblock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;proc_status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/RSS:\s*(\d+) kB/i&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_f&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;На линуксе вместо запуска &lt;code&gt;ps&lt;/code&gt; лучше использовать информацию из раздела &lt;code&gt;/proc&lt;/code&gt;.
Такой способ не требует
избыточной памяти и работает у нас
по сей день.&lt;/p&gt;

        </description>
        <pubDate>Tue, 16 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/16/back-tick/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/16/back-tick/index.html</guid>
      </item>
    
      <item>
        <title>Когда все слишком хорошо</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/deploy/main.jpg&quot; /&gt;
          &lt;p&gt;Давно заметил такой факт, что если выкатка сложная, то я сразу же открываю все
инструменты мониторинга и жду ошибок. Одна, две, три проблемы - фикс
и я спокоен. Но если проблем нет, то становится очень страшно.&lt;/p&gt;

&lt;p style=&quot;text-align:center;font-size:110%&quot;&gt;&lt;b&gt;Может быть сломалось вообще все?!?!&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Большие изменения означают, что у задачи очень много факторов, все комбинации которых невозможно
отследить самым тщательным тестированием и код ревью. Я уверен, что при любом сложном 
деплое что-то должно сломаться. По мелочи. Или по крупному. Обязательно должно.&lt;/p&gt;

&lt;p&gt;И когда действительно сломалось, то как бы не наивно это звучало, я становлюсь
сильно спокойнее. Молния же не попадает в одно место дважды? &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;

&lt;div class=&quot;hr&quot;&gt;&amp;middot;&amp;middot;&amp;middot;&lt;/div&gt;

&lt;p&gt;Расскажу пару историй из жизни.&lt;/p&gt;

&lt;p&gt;Мы оптимизировали тормозной кусок кода, который сильно нагружал базу.
Выкатили и сразу смотрим заббикс. Немного ожидания и... Красота!
База работает великолепно, CPU уменьшилось в 10 раз, все ровненько, гладенько. Чудесно.&lt;/p&gt;

&lt;p&gt;Захожу на сайт - ошибка 500
в кабинете ученика на всех страницах. Естественно нагрузка тут же снизилась на порядок, база
отдыхает. Хотфиксим, катим, ждем немного пока трафик вернется и заббикс отрисует новые данные.
Вот теперь ок.
База нагружена, но чтение с диска уменьшилось раза в полтора, как мы и планировали.&lt;/p&gt;

&lt;p&gt;Коллега проводит штатное нагрузочное тестирование, получает великолепные результаты.
Четыре сервера выдают столько
rps, сколько в прошлый раз выдавали двенадцать. Коллега радуется как хорошо настроил ферму. Подозрительно.&lt;/p&gt;

&lt;p&gt;Через неделю
проводим тестирование заново и выясняем, что в прошлом запуске сломалась авторизация.
Нагрузка тестировала как здорово NGINX отдает 302 на &lt;code&gt;if current_user.nil?&lt;/code&gt;.
Чиним, и совсем другая история - 
пора бежать докупать сервера.&lt;/p&gt;

&lt;p&gt;Поэтому я давно решил, если все слишком хорошо, это очень и очень плохо.&lt;/p&gt;

        </description>
        <pubDate>Mon, 15 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/15/deploy/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/15/deploy/index.html</guid>
      </item>
    
      <item>
        <title>Как можно документировать схему базу данных</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/doc-db/main.jpg&quot; /&gt;
          &lt;p&gt;Когда проект начал расти я почувствовал, что очень сильно не хватает комментариев к схеме
базы данных. В живом приложении появляются таинcтвенные таблицы, какие-то флаги, json-ны и
прочие неведомые вещи, иногда хочется узнать, что они означают.&lt;/p&gt;

&lt;p&gt;Конечно некоторые поля в моделях очевидны, в &lt;code&gt;Student#name&lt;/code&gt; в принципе очевидно что хранится,
но какое-нибудь &lt;code&gt;Group#migrated_from_old_db2&lt;/code&gt; (название вымышленое) нуждается в объяснении - кто, когда,
зачем это мигрировал и что такое старая база (вторая). &lt;/p&gt;

&lt;p&gt;Я завел файл &lt;code&gt;doc/db.md&lt;/code&gt;, в котором описал все таблицы и колонки, которые были на тот момент и
попросил коллег поддерживать его. Конечно никто поддерживать не стал. И не из вредности,
а потому-что при программировании приходится и так помнить тысячу вещей. Документирование
изменений схемы не входило в обязательные рутины работы.&lt;/p&gt;

&lt;div class=&quot;hr&quot;&gt;&amp;middot;&amp;middot;&amp;middot;&lt;/div&gt;

&lt;p&gt;Решил проблему просто - написал тест, который падает, если в файле &lt;code&gt;doc/db.md&lt;/code&gt; нет описания для
какой-нибудь колонки. Формат файла очень простой, он легко парсится и красиво выглядит в интерфейсе
гитхаба:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# uchi.ru db schema

## schools

Школы.

| column | description |
|--:|--:|
| name | Название |
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Все таблицы и колонки легко вытянуть с помощью &lt;code&gt;AR::Base.connection.tables&lt;/code&gt; и 
&lt;code&gt;AR::Base.connection.columns&lt;/code&gt;. Вуаля! Мержить пул реквест на красных тестах нельзя.
Но тесты падают, если схема обновилась, а &lt;code&gt;doc/db.md&lt;/code&gt; нет!&lt;/p&gt;

&lt;div class=&quot;hr&quot;&gt;&amp;middot;&amp;middot;&amp;middot;&lt;/div&gt;

&lt;p&gt;Теперь все базы данных у нас документированы, а файл &lt;code&gt;doc/db.md&lt;/code&gt; в каждом репозитарии один из ключевых
при изучении приложения с которым работаешь первый раз или давно не работал. Поддерживать
такую документацию легко и естественно, в итоге она гораздо информативнее стандартного 
файла &lt;code&gt;db/schema.rb&lt;/code&gt;.&lt;/p&gt;

        </description>
        <pubDate>Fri, 12 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/12/doc-db/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/12/doc-db/index.html</guid>
      </item>
    
      <item>
        <title>%r{егекспы}</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/regexp/main.jpg&quot; /&gt;
          &lt;p&gt;Недавно в канал коллега скинул ссылку &lt;a href=&quot;https://aaronlasseigne.com/2016/07/08/5-tips-for-writing-a-legible-regexp/&quot;&gt;5 Tips for Writing a Legible Regexp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Лично мне кажется, что регекспы созданы для того, чтобы их только писать, читать их невозможно, как ни
старайся. Однако
совет про &lt;code&gt;%r{http://...}&lt;/code&gt; понравился, я использовал его в тот день для парсинга ссылок в
тексте.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Зачем мне понадобилось парсить ссылки? О, это вообще другая история.
У нас несколько десятков репозитариев, я слежу, чтобы они все были перечислены на главной странице
в вики, сгруппированные по проектам, чтобы в случае чего было понятно
к кому обратиться с вопросом. Простой скрипт
на руби сравнивает список ссылок на странице с репозитариями в гитхабе и выдает разницу если она есть.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Однако &lt;code&gt;%r{}&lt;/code&gt; не единственная хитрость, которую стоит попробовать.
В руби вообще на мой вкус самый дружелюбный синтаксис, среди всех языков, которые встречал.
&lt;code&gt;%w[word1 word2]&lt;/code&gt;, &lt;code&gt;system %(ssh alex@host &amp;#39;grep &amp;quot;foo&amp;quot; /var/log/bar.log&amp;#39;)&lt;/code&gt;,
&lt;code&gt;return unless ...&lt;/code&gt; и кучу других маленьких
удобных приемов я использую каждый день.&lt;/p&gt;

        </description>
        <pubDate>Thu, 11 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/11/regexp/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/11/regexp/index.html</guid>
      </item>
    
      <item>
        <title>И снова здравствуйте</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/reborn/main.jpg&quot; /&gt;
          &lt;p&gt;Я много раз начинал писать блог и много раз бросал. Но природу не обманешь, нравится мне это дело, попробую еще раз.&lt;/p&gt;

&lt;p&gt;Итак, представлюсь. Меня зовут Алексей Вахов. 7 лет я был C++ разработчиком разной степени
суровости. С Руби он Рейлс меня познакомил дорогой друг &lt;a href=&quot;http://evtuhovich.ru/&quot;&gt;Иван Евтухович&lt;/a&gt;
в 2006 году. Увлекаюсь Рейлс почти с самых первых версий и даже попал в
&lt;a href=&quot;http://contributors.rubyonrails.org/&quot;&gt;топ-100 контрибьюторов&lt;/a&gt;. Однако профессионально занимаюсь
веб-разработкой около 6 лет.&lt;/p&gt;

&lt;p&gt;Сейчас работаю техническим директором в компании &lt;a href=&quot;https://uchi.ru&quot;&gt;Учи.ру&lt;/a&gt;.
Мы занимаемся интересным и важным делом - учим детей математике и даже уже чуть-чуть русскому языку.
Четыре года назад проект начинался с нуля, первых пользователей мы нашли в школе, которая находится рядом с офисом. Сегодня
у нас 900 тысяч учеников, много продакшенов, серверов, задач, вопросов и планов.&lt;/p&gt;

&lt;!--
&lt;div class=&quot;hr&quot;&gt;&amp;middot;&amp;middot;&amp;middot;&lt;/div&gt;

Я очень трепетно отношусь к копирайтам любого вида, сразу же решил, что иллюстрации к блогу буду
рисовать сам, чтобы быть точно уверенным, что не нарушаю чужих прав.
Также мне сложно провести границу в голове, где
заканчиваются мои мысли и начинается коммерческая тайна. Поэтому про работу
буду писать
только ту информацию, в открытости которой я уверен.
--&gt;

&lt;p&gt;До сих пор очень люблю Рейлс, хотя заниматься им стал конечно гораздо меньше. В настоящее время больше интересуюсь всем,
что связано с разработкой ПО в целом: как создать комфортную среду, наладить процессы и взаимодействие
внутри команды и вне, обеспечить стабильность приложений и их дальнейшее развитие, и так далее.&lt;/p&gt;

&lt;p&gt;В блоге планирую писать про разные штуки, связанные с разработкой, работой, а также свои мысли, идеи
и все такое. Надеюсь что-то покажется интересным и возможно даже поможет. Писать планирую регулярно
и достаточно долгий срок. Как говаривал Будда в жизни есть 2 сложные вещи:
начать что-то делать и продолжить
это делать.&lt;/p&gt;

&lt;p&gt;На сегодня все, спасибо за внимание и до новых встреч!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Алексей Вахов&lt;/em&gt;&lt;/p&gt;

        </description>
        <pubDate>Wed, 10 Aug 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/08/10/reborn/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/08/10/reborn/index.html</guid>
      </item>
    
      <item>
        <title>Ember - 3. REST</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/meeio.jpg&quot; /&gt;
          &lt;p&gt;Давно не брал я в руки вима, вот беру и снова беру. Недавно узнал, что есть устойчивая аббревиатура MEAN
для стека из монго, експресса, ангуляра и ноды.
У нас ембер вместо ангуляра, меняем ноду на iojs, работаем в стеке MEEIO. &lt;/p&gt;

&lt;p&gt;В прошлом выпуске &lt;a href=&quot;/blog/2015/01/29/ember-2-fire/index.html&quot;&gt;&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;
мы сделали буковку R из CRUD для постов, сегодня доделаем все остальные буквы. Обновляем рауты:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;posts/index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;posts/new&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/posts/new&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;posts/show&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/posts/:id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;posts/edit&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/posts/:id/edit&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;На главной странице добавляем ссылку на создание нового поста (&lt;code&gt;app/templates/posts/index.hbs&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-handlebars&quot; data-lang=&quot;handlebars&quot;&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;posts/new&amp;quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;New Post&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/link&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Делаем раут для &lt;code&gt;new&lt;/code&gt; (&lt;code&gt;app/routes/posts/new.js&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;model.isNew&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rollback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Обратите внимание на метод &lt;code&gt;deactivate&lt;/code&gt;. Я не знаю насколько это стандартный прием, придумал его из
головы. В прошлом выпуске мы обсуждали, что ембер-store - это некоторая сущность, которая должна
синхронизироваться с сервером. &lt;code&gt;createRecord&lt;/code&gt; не синхронизирует запись с сервером, однако создает его в
сторе. И если вы откажитесь от сохранения записи и выйдите через меню на главную страницу, то пустая
запись будет в вашем списке. Чтобы этого не произошло и добавил ролбек на не сохрненную модель.&lt;/p&gt;

&lt;p&gt;В форме вешаем на кнопку экшен (&lt;code&gt;app/templates/posts/_form.hbs&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-handlebars&quot; data-lang=&quot;handlebars&quot;&gt;&lt;span class=&quot;x&quot;&gt;  &amp;lt;button type=&amp;quot;submit&amp;quot; class=&amp;quot;btn btn-default&amp;quot; &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;save&amp;quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Который обрабатываем в контроллере (&lt;code&gt;app/controllers/posts/new.js&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ember&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjectController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transitionToRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;posts/show&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Таким образом реализовали C. Остальные буквы легко сделать по аналогии.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Изменения - &lt;a href=&quot;https://github.com/avakhov/ember-demo/compare/52b5925aa6a72726998bfd5d7600f49ce83e2ff2...2212d524f6b41407e468830fe8114260e117f4cc&quot;&gt;https://github.com/avakhov/ember-demo/compare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Приложение на хероку - &lt;a href=&quot;http://ember-demo.herokuapp.com&quot;&gt;http://ember-demo.herokuapp.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </description>
        <pubDate>Tue, 17 Feb 2015 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2015/02/17/meeio/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2015/02/17/meeio/index.html</guid>
      </item>
    
      <item>
        <title>Tsort</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/tsort.jpg&quot; /&gt;
          &lt;p&gt;В исходниках Рейлс я как-то увидел ссылку на модуль &lt;code&gt;tsort&lt;/code&gt; &lt;a href=&quot;https://github.com/rails/rails/blob/v4.2.0/railties/lib/rails/initializable.rb#L40-L45&quot;&gt;&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;.
&amp;quot;Tsort, WTF?&amp;quot; - подумал я (в переводе с английского это означает -
что за неведомый, удивительный метод &lt;code&gt;tsort&lt;/code&gt; есть в нашем любимом руби).&lt;/p&gt;

&lt;p&gt;Документация говорит &lt;a href=&quot;http://www.ruby-doc.org/stdlib-2.1.2/libdoc/tsort/rdoc/TSort.html&quot;&gt;&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;:
&amp;quot;TSort implements topological sorting using Tarjan&amp;#39;s algorithm for strongly connected components&amp;quot;.
Википедия поддерживает &lt;a href=&quot;http://en.wikipedia.org/wiki/Strongly_connected_component&quot;&gt;&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;:
&amp;quot;In the mathematical theory of directed graphs, a graph is said to be strongly connected if every vertex is reachable from every other vertex&amp;quot;.&lt;/p&gt;

&lt;p&gt;Обычно такие объяснения выглядят для меня примерно так: &amp;quot;麺類 緑茶 algorithm 車青出&amp;quot;, но в этот
раз я даже
разобрался. Эта штука помогает найти циклические зависимости в графе, что очень хорошо,
например, для подсчета зависимостей:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;tsort&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BuildSystem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TSort&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tsort_each_node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each_key&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tsort_each_child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_order&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tsort&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;valid?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;strongly_connected_components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Cyclic deps: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BuildSystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rack&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rails&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[activerecord activesupport actionmailer]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;actionmailer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[rack]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;activesupport&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[rack]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;activerecord&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid?&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_order&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&amp;quot;rack&amp;quot;, &amp;quot;activerecord&amp;quot;, &amp;quot;activesupport&amp;quot;, &amp;quot;actionmailer&amp;quot;, &amp;quot;rails&amp;quot;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rack&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[rails]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid?&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Cyclic deps: [&amp;quot;rack&amp;quot;, &amp;quot;rails&amp;quot;, &amp;quot;activesupport&amp;quot;, &amp;quot;actionmailer&amp;quot;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Вот такой вот дивный компонент.&lt;/p&gt;

        </description>
        <pubDate>Mon, 02 Feb 2015 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2015/02/02/tsort/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2015/02/02/tsort/index.html</guid>
      </item>
    
  </channel>
</rss>
