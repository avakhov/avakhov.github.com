<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Tech addicted</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Два принципа</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/two-principe/main.jpg&quot; /&gt;
          &lt;p&gt;В жизни я стараюсь следовать двум принципам:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;телефон не должен звонить;&lt;/li&gt;
&lt;li&gt;&lt;a href=https://www.artlebedev.ru/kovodstvo/sections/167/&gt;метод прогрессивного джипега&lt;/a&gt; Артемия Лебедева.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Первый принцип означает, что с работы не должно быть звонков в нерабочее время, а для этого
нужно либо все хорошо наладить, либо, что еще надежнее, скрывать свой номер телефона. Второй способ
у нас почему-то не одобряется, поэтому я стараюсь идти по первому пути &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Ну а метод прогрессивного джипега - по-моему абсолютно гениальный способ выполнения многих дел,
особенно в IT. Если задача сделана за пару дней с нулевой прожаркой, ее не надо согласовывать, планировать,
утверждать и так далее. Можно просто показать и обсудить результат. Получая быстро конечные формы решения, можно
практически полностью ускользнуть из лап бюрократии, которая есть в любой, даже самой хорошей компании.&lt;/p&gt;

        </description>
        <pubDate>Tue, 20 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/20/two-principe/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/20/two-principe/index.html</guid>
      </item>
    
      <item>
        <title>Как заходить на сайт</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/visit/main.jpg&quot; /&gt;
          &lt;p&gt;Вообще разработчик вряд ли будет профессионально знать все тонкости командной строки
(например я каждый раз ищу в интернете, как сделать
в цикл или проверку условия на баш-скрипте и есть подозрение, что каждый раз нахожу новый вариант),
но некоторые хитрости знать очень полезно. Например
как можно зайти на сайт, если кажется, что что-то работает не так.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl -v https://yandex.ru&lt;/code&gt; - даст много полезной информации о сертификате, заголовках, редиректах и так далее.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ab -c10 -n100 https://yandex.ru/&lt;/code&gt; - зайти громко, полезно если вы хотите увидеть факт запроса в логах (научил меня этому приему &lt;a href=http://evtuhovich.ru&gt;Иван Евтухович&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl s_client -connect yandex.ru:443&lt;/code&gt; - выводит цепочку сертификатов, пригодится если есть подозрение, что установлен неправильный сертификат (из копилки непревзойденного &lt;a href=https://twitter.com/whitew1nd&gt;Юрия Игнатова&lt;/a&gt; из Express42, вообще Юра умеет писать из головы такие хитрые openssl-команды, что я даже не пытаюсь повторить).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Таким образом отладку любого ендпойнта обычно начинаю с одной из этих команд. Конечно
еще помогает &lt;code&gt;curl&lt;/code&gt; во всех его других проявлениях, но нужные опции,
кроме пожалуй &lt;code&gt;-H&lt;/code&gt;, &lt;code&gt;-X&lt;/code&gt; я читаю в мане или гуглю.&lt;/p&gt;

        </description>
        <pubDate>Mon, 19 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/19/visit/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/19/visit/index.html</guid>
      </item>
    
      <item>
        <title>Поиск по логам для бедных</title>
        <description>
          
          &lt;p&gt;Очень здорово когда логи собираются в централизованном месте и есть какой-то удобный интерфейс для
их поиска. Однако так бывает не всегда и на самом деле не все интерфейсы удобны.&lt;/p&gt;

&lt;p&gt;В самом простом случае логи сохраняются прямо на диске и регулярно ротируются. И если поиск по логам
осуществляется редко,  то вполне можно справится
стандартными линукс утилитами.&lt;/p&gt;

&lt;p&gt;Для начала очень рекомендую добавить в &lt;code&gt;production.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:uuid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:remote_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;user-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookie_jar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;anon&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Тогда логи будут выглядет примерно так:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[4ba12972-bf3a-4dc5-9f9e-66908966e534] [50.141.127.26] [user-21] Processing by SomeController#some as HTML
[4ba12972-bf3a-4dc5-9f9e-66908966e534] [50.141.127.26] [user-21] Completed 200 OK in 16ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;и будут прекрасно грепаться.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;fgrep &lt;span class=&quot;s1&quot;&gt;&amp;#39;[user-21]&amp;#39;&lt;/span&gt; *.log
zfgrep &lt;span class=&quot;s1&quot;&gt;&amp;#39;[user-21]&amp;#39;&lt;/span&gt; *.gz
zfgrep &lt;span class=&quot;s1&quot;&gt;&amp;#39;Completed 302&amp;#39;&lt;/span&gt; *.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;У грепа есть разновидности: &lt;code&gt;fgrep&lt;/code&gt; - ищет точные вхождения подстроки, не пытаясь использовать
регекспы, &lt;code&gt;zfgrep&lt;/code&gt; - делает тоже самое, но уже по сжатым файлам.&lt;/p&gt;

&lt;p&gt;В рейлс логи многострочные, поэтому когда нашли интересный кейс, часто хочется
узнать логи для данных запросов целиком. В этом случае опять поможет греп.
У каждого запроса есть уникальный &lt;code&gt;uuid&lt;/code&gt; (при
условии что вы добавили &lt;code&gt;log_tags&lt;/code&gt;), в этому случае можно склеить любым
удобным способом греп команду и получить уже полный листинг запросов для исследования:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;grep &amp;#39;10a15a85-1216-47b2-b2c0-8ddb38c97ae2\|2424e9f8-c0cb-411a-8057-6c6308e5f7f6&amp;#39; production.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Когда поиск сужен можно уже пройтись рубями или любым другим скриптовым языком (ковырять с помощью
руби гигабайтные файлы тоже можно, если жизнь заставит, но будет не очень быстро).&lt;/p&gt;

&lt;p&gt;Так что если поиск по логам не входит
в ежедневные рабочие рутины, в большинстве случаев можно обойтись подручными средствами.&lt;/p&gt;

        </description>
        <pubDate>Fri, 16 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/16/pure-logs/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/16/pure-logs/index.html</guid>
      </item>
    
      <item>
        <title>Что мне не нравится в рейлс</title>
        <description>
          
          &lt;p&gt;В рейлс мне не нравятся, пожалуй, две вещи: минимальный проект в любом случае состоит
из большого количества файлов. В этом плане Node.js и Go симпатичней, можно выращивать полезный
сервис, начав с одного файла. А иногда одного файла и хватает. Например у нас есть бот, который
скидывает по запросу статус заббикса в слек. Он состоит всего из 130 строчек джаваскрипта.&lt;/p&gt;

&lt;p&gt;И вторая вещь связана с динамической природой самого руби, которая с одной стороны помогла сделать
выразительный, компактный и очень мощной фреймворк, с другой стороны код плохо грепается, гораздо
хуже чем на Go или C++ например. Так как нет никакой гарантии, что кто-то не вызвал какой-нибудь метод
 с помощью &lt;code&gt;send &amp;quot;some&amp;quot; + &amp;quot;_another&amp;quot;&lt;/code&gt;. Конечно, обычно так не делают, но в общем случае
гарантии нет. Например когда используются гемы со слишком пересахаренным интерфейсом,
или попробуйте найти в легаси проекте все варианты построения раута (включая &lt;code&gt;form_for [:admin, @user]&lt;/code&gt;).&lt;/p&gt;

        </description>
        <pubDate>Thu, 15 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/15/rails-hate/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/15/rails-hate/index.html</guid>
      </item>
    
      <item>
        <title>Slim &amp; Coffee</title>
        <description>
          
          &lt;p&gt;Я очень люблю &lt;a href=&quot;http://coffeescript.org/&quot;&gt;Coffeescript&lt;/a&gt; и &lt;a href=&quot;http://slim-lang.com/&quot;&gt;Slim&lt;/a&gt; по очень простой
причине: Coffeescript выучил из ролика Рьяна Бейтса -
&lt;a href=&quot;http://railscasts.com/episodes/267-coffeescript-basics&quot;&gt;railscasts #267&lt;/a&gt;
(кофескрипт сейчас сильно сдает позиции на фоне ES6, но это другая история),
а Slim - читая главную страницу сайта. Все, больше
никогда не учил, изредка только что-то подгугливал.&lt;/p&gt;

&lt;p&gt;Конечно не все технологии можно так подать, но мне кажется к этому
нужно стремится в современном
разогнаном мире.&lt;/p&gt;

        </description>
        <pubDate>Wed, 14 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/14/slim-coff/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/14/slim-coff/index.html</guid>
      </item>
    
      <item>
        <title>Блогомашина</title>
        <description>
          
          &lt;p&gt;Как говаривал Будда есть две сложные вещи: начать что-то делать и продолжить это делать регулярно. Так и
с блогом, мне нравится его писать, нравится результат, но как сделать так чтобы не забросить?&lt;/p&gt;

&lt;p&gt;Расскажу как мотивирую себя писать дальше. Вообще я решил писать блог ровно год, по посту каждый
будний день, а потом подумать, что делать дальше (делаем ставки, продержусь или нет &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;).
У меня нет силы воли
в смысле &amp;quot;буду вставать в шесть утра, обливаться холодной водой, кросс, потом два поста в блог&amp;quot;. Нет.
Скорее накануне такой здоровой новой жизни я приму пивка, будет повод 
обязательно какой-нибудь хороший,
и проснусь часиков в одиннадцать. Вместо силы воли - я стараюсь создать правильные условия, которые
помогают двигаться в желаемом направлении.&lt;/p&gt;

&lt;p&gt;Каждый день, после работы, делаю несколько простых вещей:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;смотрю комментарии и отвечаю если есть&lt;/li&gt;
&lt;li&gt;вычитываю посты в очереди&lt;/li&gt;
&lt;li&gt;пишу два новых поста&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В тудуисте у меня есть проект с идеями для блога, который я постоянно пополняю. Потом спец-скриптом
беру случайную идею и либо пишу пост по ней, либо выкидываю из списка. Так как идеи - штуки
ценные, то стараюсь все-таки писать. Каждый новый пост генерируется с параметром &lt;code&gt;read = 3&lt;/code&gt;, что
означает, что его нужно вычитать минимум три раза. При каждой вычитке я уменьшаю цифру на единицу, пока
она не станет равной 0. Раз в неделю для всех постов в очереди отрисовываю картинки, сканирую их и
раскрашиваю. Все. То есть такой самый настоящий конвейер.&lt;/p&gt;

&lt;p&gt;Генри Форд - красавчик! Кстати &lt;a href=&quot;http://www.lookatme.ru/mag/live/wrong-beliefs/209093-ignorance-ford-assembly&quot;&gt;умные люди в интернете говорят&lt;/a&gt;,
что &amp;quot;Форд не изобретал конвейер, а впервые организовал поточное производство&amp;quot;. Не совсем понимаю
в чем разница &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;, но eсли бы не блог - стал бы
я это вообще гуглить?&lt;/p&gt;

        </description>
        <pubDate>Tue, 13 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/13/blogo-engine/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/13/blogo-engine/index.html</guid>
      </item>
    
      <item>
        <title>Виму преданности пост</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/vim/main.jpg&quot; /&gt;
          &lt;p&gt;Я серьезно работал всего в двух редакторах: Visual Studio и Vim, причем последние лет 6 -
только вим, так как C++ уже давно
не занимаюсь. К виму у меня особое отношение, нельзя сказать, что я его люблю или нет, просто по другому уже не могу. Слишком привыкли
пальцы к командам, давно уже отлажены конфигурационные файлы и собран набор необходимых плагинов.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avakhov/dotvim&quot;&gt;https://github.com/avakhov/dotvim&lt;/a&gt; - работа с любым новым компьютером начинается с запуска
инсталяционного скрипта из ридми-файла, несколько томительных секунд, и я готов к работе (ок-ок, я работаю
не только в виме, еще есть криптованный
архив с файлом &lt;code&gt;install.sh&lt;/code&gt;, копирующим все необходимые дот-файлы и ключи).&lt;/p&gt;

&lt;p&gt;Я пробовал и текстмейт, и саблайм, и атом, но не прижились. Не те ощущения. Более того, в глубине души я верю, что в виме код получается
красивее, так как он весь такой цифровой и конкретный. Использование мышки в редакторе делает код более аналоговым и расхлябанным
(аудиофилы поймут).&lt;/p&gt;

&lt;p&gt;Вот он мой родной, любимый &lt;img class=&#39;emoji&#39; title=&#39;:heart:&#39; alt=&#39;:heart:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/2764.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2/vim/vim.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

        </description>
        <pubDate>Mon, 12 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/12/vim/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/12/vim/index.html</guid>
      </item>
    
      <item>
        <title>Не очень программист</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/too_dev/main.jpg&quot; /&gt;
          &lt;p&gt;Когда я уходил из системной С++-разработки в веб-разработку на руби, настроение было
очень паршивое. Было ощущение будто бы сорвали разом две лычки. К тому времени я прочитал все
ключевые книги Страуструпа, Александреску, Мейерса и других уважаемых товарищей, разбирался
в шаблонах, умных указателях, паттернах и прочих сложных вещах. Язык руби казался слишком примитивном -
на этом же может писать любой школьник!&lt;/p&gt;

&lt;p&gt;Через полгода или год я встретился с бывшими коллегами, к тому времени уже сделав несколько
простых сайтов на рейлс и даже их немножко продав, и в ходе беседы окончательно убедился в правильности
своего решения. Они обсуждали как кто-то оптимизировал алгоритм переворачивания строки, сделал
это неправильно и дефект даже дошел до продакшена. Я понял, что мне больше неинтересно
заниматься такими низкоуровневыми вещами, в веб-разработке мы гораздор ближе к задачам бизнеса,
результаты получаются быстрее, мотивация в виде довольных или рассерженных клиентов
сильно ярче.&lt;/p&gt;

&lt;p&gt;С тех пор для меня бизнес-ориентированность задач, при всей мерзости этого сочетания, очень
важный показатель. Если приходится заниматься чем-то, что никто из живых людей не увидит, я сержусь.&lt;/p&gt;

        </description>
        <pubDate>Fri, 09 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/09/too_dev/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/09/too_dev/index.html</guid>
      </item>
    
      <item>
        <title>Волшебная палочка</title>
        <description>
          
          &lt;p&gt;Я очень не люблю когда скрипт долго работает и ничего не выводит в консоль, хочется потыкать его
палочкой и узнать жив ли он еще. В качестве такой палочки обычно использую что-нибудь такое:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;] processed: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;где вместо 100 подбираю параметр, при котором строка печатается раз в несколько секунд. Если
известно общее количество записей, которые нужно обработать, еще нагляднее будет
вывести &lt;code&gt;&amp;quot;#{count} of #{total}&amp;quot;&lt;/code&gt;.&lt;/p&gt;

        </description>
        <pubDate>Thu, 08 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/08/progress/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/08/progress/index.html</guid>
      </item>
    
      <item>
        <title>Соколиный глаз</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/ux/main.jpg&quot; /&gt;
          &lt;p&gt;После нескольких лет работы в вебе, у меня появилось немного вкуса и наблюдательности. Могу различить
несколько видов шрифтов, сразу же вижу когда забыли паддинга добавить и всякие другие штуки.
Каждый раз удивляюсь и радуюсь этому.&lt;/p&gt;

&lt;p&gt;Раньше я был суровым серверным разработчиком, с соответствующими представлениями о прекрасном.
Первый культурный шок вызвал наш генеральный
директор четыре года назад. Он между делом сказал:
&amp;quot;о, у скайпа иконка поменялась, была выпуклая, а стала плоская&amp;quot;. Я
у него спросил: &amp;quot;ты это специально высматриваешь?&amp;quot; Он ответил, что просто в глаза бросилось. &amp;quot;Что за
неведомая магия&amp;quot; - подумал я тогда. А теперь сам вижу.&lt;/p&gt;

&lt;p&gt;А вы замечаете когда у хрома закладки с прямоугольничков меняются на клинышек? Или кнопка закрытия
вкладки была жирненькая, а стала тоненькая? Или шрифт в iOS поменялся?&lt;/p&gt;

        </description>
        <pubDate>Wed, 07 Sep 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/09/07/ux/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/09/07/ux/index.html</guid>
      </item>
    
  </channel>
</rss>
