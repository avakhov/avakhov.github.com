<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Блог, милый блог. Новая история каждый будний день.</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Второй кризис блоггинга</title>
        <description>
          
          &lt;p&gt;Внеочередной не технический выпуск. Как вы может быть знаете, с 10 августа 2016 года я решил писать технический блог целый год, каждый
день по рабочим днем. Мне нравится такой формат блога, он заставляет под другим углом смотреть на работу, перепроверить
знания, да и просто
тренирует заниматься чем-то регулярно. Я уверен
у каждого технического человека есть много, что рассказать, но часто это будет понятно только коллегам. Рассказывать короткие
истори об IT, интересные широкому кругу людей - достаточно сложно. И я чувствую, что иногда справляюсь, а иногда нет. &lt;/p&gt;

&lt;p&gt;Так вот кризис. Это уже второй кризис. Первый я проскочил незаметно для аудитории - заранее заготовил 10 статей с картинками
и полторы недели не писал ничего. Сейчас второй. Посильнее, на 7 баллов из 10. Картинки не рисую, так как их нужно принести
на работу, отсканивать и ломает вот это все делать. Хотя с картинками внешний вид конечно веселей, но пока увы. К счастью в моем внутреннем соглашении
нет пункта насчет этого, ничего не нарушаю, товарищ внутренний майор.&lt;/p&gt;

&lt;p&gt;Немного предыстории. Готовился к перфомансу около года, собирал темы. Набрал больше 300 тезисов, начал писать. 250 почти
сразу же выкинул, дичь какая-то или не понятно вообще к чему я их записал. Где-то каждый третий-пятый пост идет под нож, по той же
причине. Остальное, выстраданное и выплаканное, попадает в очередной выпуск. Конечно я не жалуюсь и не ною (хотя, жалуюсь
и ною на самом деле), но духовная практика и не может быть простой, энтузиазма обычно хватает максимум на несколько недель, а дальше
обыденная, рутинная деятельность, которая впрочем довольно приятна и плодотоворна, если относиться философски.&lt;/p&gt;

&lt;p&gt;Но думаю прорвусь, 10 месяцев осталось, фигли там. Держусь, настроение, ммм..., хорошее! Удачи мне &lt;img class=&#39;emoji&#39; title=&#39;:neckbeard:&#39; alt=&#39;:neckbeard:&#39; src=&#39;https://assets.github.com/images/icons/emoji/neckbeard.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Thu, 27 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/27/krizis/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/27/krizis/index.html</guid>
      </item>
    
      <item>
        <title>Тысяча и одно падение продакшена</title>
        <description>
          
          &lt;p&gt;Есть одна тема, которую я прямо чувствую, что не принято обсуждать - это падения продакшена. Причем, хотя не падают только те проекты,
которыми никто не пользуется или которые еще не написаны (идеальный софт бывает только в голове),
но почему-то все равно стыдно.&lt;/p&gt;

&lt;p&gt;99% падений, чего уж там скрывать, вызваны
именно ошибками инженеров, человеческим фактором, незнанием каких-то тонкостей и особенностей системы и так далее.
Скорее всего поэтому тема падений неудобная, так как люди считают, что признание
своих ошибок подрывает их профессионализм. Но я с таким подходом категорически не согласен. Как программные дефекты - это часть
процесса управления разработкой, так и разнообразные нештатные ситуации - это часть процесса управления эксплуатации систем.
Бизнес интегрити
и все дела.&lt;/p&gt;

&lt;p&gt;Чтобы еще более успокоить, приведу цитату из книги Питера Друкера &amp;quot;Эффективный управляющий&amp;quot; (вообще книга хороша, хочется процититировать
ее почти целиком, выделение жирным - мое):&lt;/p&gt;

&lt;blockquote&gt;
Любой, кто так или иначе был связан с кампанией безопасности 
движения - автомобильная промышленность, автоинспекция, автоклубы и страховые 
компании, - &lt;b&gt;считали, что признание вероятности происшествий является чуть ли не 
подстрекательством опасного вождения&lt;/b&gt;, аналогично тому, как поколение моего деда 
считало, что врач, лечащий венерическое заболевание, потворствует аморальному 
поведению. Это типичное свойство человеческой натуры &lt;b&gt;путать вероятность с моральной 
стороной вопроса и является причиной опасных ошибок&lt;/b&gt;, которые бывает трудно 
исправить.  
&lt;/blockquote&gt;

&lt;p&gt;Так что падения - это нормально, значит у вас есть живой сервис. Падение под трафиком - это вообще прекрасно, значит у вас есть трафик. Падение из-за неправильных действий - чудесно, значит вы что-то делаете.
И так далее &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Thu, 27 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/27/1001/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/27/1001/index.html</guid>
      </item>
    
      <item>
        <title>Контекст важен</title>
        <description>
          
          &lt;p&gt;Контекст важен. И чем старше я становлюсь, тем отчетливее это понимаю. Вот например, смотрите: 
&amp;quot;Руби - гамно&amp;quot;. В зависимости
от окружения и от автора этого высказывания - это может быть глупостью, бахвальством или глубоким
пониманием конкретной ситуации и задачи (выраженное тем не менее достаточно вульгарно).&lt;/p&gt;

&lt;p&gt;В жизни я относительно легко разбираюсь в контексте инженеров, и что они вкладывает в те или иные фразы.
А вот
в интернете мне гораздо сложнее. Пожалуй интернет использую просто как большой справочник, я очень
мало здесь общаюсь. Остро не хватает пометок &amp;quot;умный, глубокие знания A, B и C, любит
тонкий троллинг и неоднозначные высказывания&amp;quot; или &amp;quot;глуповат, нет чувства юмора, заносчив, обходить
стороной&amp;quot;.&lt;/p&gt;

&lt;p&gt;Мне кажется, что в ЖЖ такие пометки есть, можно создавать каждому комментару персональный
контект и его историю. Вроде Лебедев такими пользуется, при выращивании своей аудиторию. Если
есть цель именно ухаживать за деревом комментариев, наверное это даже удобно...&lt;/p&gt;

&lt;p&gt;Вообщем все сложно.&lt;/p&gt;

        </description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/26/context/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/26/context/index.html</guid>
      </item>
    
      <item>
        <title>Транзакционные письма без регистраций и СМС</title>
        <description>
          
          &lt;p&gt;Если вы любите бутстрап, а если вы программируете внутренние сервисы и админки, то вы обязаны любить бутстрап, вам также
понравятся вот эти &lt;a href=&quot;https://github.com/mailgun/transactional-email-templates&quot;&gt;бесплатные шаблоны писем от мейлгана&lt;/a&gt;.
С помощью них вы сможете добиться не только прекрасного внешнего вида сайта (меня правда уже подташнивает
от чистого бутстрапа, но я не знаю более быстрого и простого способа набросать несколько интерфейсов), но и будете отправлять
очаровательные
письма.&lt;/p&gt;

&lt;p&gt;Подкючаете гем &lt;code&gt;premailer-rails&lt;/code&gt;, кидаете &lt;code&gt;styles.css&lt;/code&gt; прямо в &lt;code&gt;public&lt;/code&gt;, копируете
любой из трех html-шаблонов во вьюху письма, исправляя ссылку к стилям прямо на &lt;code&gt;http://cdn.example.com/styles.css&lt;/code&gt;, что это значит
не разбирался, но именно так работает гем, и &lt;code&gt;AwesomeMailer.foobar.deliver&lt;/code&gt;. Вуаля, прекрасно сверстанное письмо (кстати
здесь без иронии, письма действительно выглядят очень прилично) оказывается у адресатов.&lt;/p&gt;

&lt;p&gt;Можно конечно отправить и мейлчимповский шаблон через мендрил, но мне кажется с шаблонами мейлгана получится быстрее.&lt;/p&gt;

        </description>
        <pubDate>Tue, 25 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/25/mailgun/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/25/mailgun/index.html</guid>
      </item>
    
      <item>
        <title>SSH-ключи в ансибле с гитхаба</title>
        <description>
          
          &lt;p&gt;Новость номер один. Любой публичный ключ с гитхаба можно узнать по ссылке &lt;a href=&quot;https://github.com/dhh.keys&quot;&gt;https://github.com/dhh.keys&lt;/a&gt;,
где вместо &lt;code&gt;dhh&lt;/code&gt;
нужно поставить ник нужного пользователя.&lt;/p&gt;

&lt;p&gt;Новость номер два. В ансибл есть &lt;a href=&quot;http://docs.ansible.com/ansible/authorized_key_module.html&quot;&gt;модуль&lt;/a&gt;,
который авторизует по ssh с помощью этих ключей.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;authorized_key&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;user=dhh key=https://github.com/dhh.keys validate_certs=no&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;quot;Вау!&amp;quot; - подумал я и тут же накатил ssh-доступ для пользователя &lt;code&gt;vakhov&lt;/code&gt; на тестовый сервер.
Работает на пять баллов, проблема только в том, что я - &lt;code&gt;avakhov&lt;/code&gt;. А кто такой &lt;a href=&quot;https://github.com/vakhov&quot;&gt;https://github.com/vakhov&lt;/a&gt; я не знаю &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

&lt;p&gt;Так, что вау пришлось забрать назад. Открылась большая проблема - пользователей в гитхабе много и любая опечатка в нике будет
давать доступ постороннему человеку. Вероятность, что он попробует зайти на ваши сервера конечно изчезающе маленькая, к тому же обычно ssh прячут за VPN, но
все равно это неприятно осознавать.&lt;/p&gt;

&lt;p&gt;А вы бы воспользовались такой фичей?&lt;/p&gt;

        </description>
        <pubDate>Mon, 24 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/24/ansible-keys/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/24/ansible-keys/index.html</guid>
      </item>
    
      <item>
        <title>Пару приемов при работе с JSON в консоли</title>
        <description>
          
          &lt;p&gt;Если вы работаете курлом с каким-нибудь JSON-API, то кроме умения вбивать без ошибок &lt;code&gt;-H &amp;#39;Content-Type: application/json&lt;/code&gt; вам очень
пригодятся утилиты для работы с JSON.&lt;/p&gt;

&lt;p&gt;Раньше я всегда использовал питон (обычно он есть везде), чтобы красиво отрисовать результат: &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl ... &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; python -m json.tool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но сейчас полностью перешел на &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;, очень рекомендую посмотреть, если еще не видели.
Вот так например
в Селектеле можно найти ID проекта с именем &lt;code&gt;some-proj&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -s -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;X-token: $SELECTEL_TOKEN&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  https://api.selectel.ru/vpc/resell/v2/projects &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  jq -r &lt;span class=&quot;s1&quot;&gt;&amp;#39;.projects | map(select(.name == &amp;quot;some-proj&amp;quot;)) | .[0].id&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Раньше бы я такую штуку сделал бы на руби, но по-моему здорово уметь решать одну и ту же задачу по разному.&lt;/p&gt;

        </description>
        <pubDate>Fri, 21 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/21/utils/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/21/utils/index.html</guid>
      </item>
    
      <item>
        <title>Кто дергал этот запрос и послал его?</title>
        <description>
          
          &lt;p&gt;Один из важных моментов оптимизации рейлс-приложения, на котором кстати часто вся оптимизация и заканчивается, это уменьшение количество запросов в базу.&lt;/p&gt;

&lt;p&gt;Самый простой способ понять что нужно оптимизировать, пожалуй - посмотреть в ньюрелике
под вашим штатным трафиком, какой экшен занимает больше всего времени. После этого запустить приложение локально и начать изучать
какие строчки кода тревожат базу. Многие проблемы легко понять просто по логам. Убрав тяжелые N+1, а также большинство
запросов &lt;code&gt;CACHE&lt;/code&gt;, вы сильно поможете приложению.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Все &lt;code&gt;СACHE&lt;/code&gt; очень рекомендую убирать (один из вариантов - смотрим и ностальгируем 
&lt;a href=&quot;http://railscasts.com/episodes/1-caching-with-instance-variables&quot;&gt;Caching with Instance Variables&lt;/a&gt;), так как несмотря на то что запрос в базу
не посылается, &lt;code&gt;ActiveRecord&lt;/code&gt; кэширует запрос на уровне SQL, все AR-объекты пересоздаются с нуля, что жгет CPU и негативно влияет на произодительность.&lt;/p&gt;

&lt;p&gt;Также есть два удобных инструмента, которые помогут справится с задачей. Старый, добрый &lt;a href=&quot;https://github.com/josevalim/rails-footnotes&quot;&gt;rails-footnotes&lt;/a&gt; на страницах
рисует полную информацию о всех запросах.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2/db/footnotes.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Так как футнотес наверняка будет рвать верстку, то я его обычно подключаю с помощью такой конструкции:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;defined?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Footnotes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Footnotes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;FOOTNOTES&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Теперь, чтобы включить футноты достаточно создать в корне файл &lt;code&gt;touch FOOTNOTES&lt;/code&gt;. Если его удалить, то футноты отключатся без перезагрузки сервера.
Естественно на продакшене футноты не надо включать никогда &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

&lt;p&gt;Однако футноты не помогут, если таинственный запрос к базе в AJAX&amp;#39;е, а по коду сходу не понятно в каком колбеке или библиотеке он вызывается.
Решение тоже есть - это &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt;. В инициалайзере подписываемся на
SQL-запросы и находим негодяя:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ActiveSupport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Notifications&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscribe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sql.active_record&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;caller&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;User Load&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Берегите свою базу смолоду и она вам верно прослужит многие годы &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Thu, 20 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/20/db/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/20/db/index.html</guid>
      </item>
    
      <item>
        <title>Утилиты, утилиты</title>
        <description>
          
          &lt;p&gt;Вдруг кто не знал, но есть две прекрасные утилиты, одна полезная, а вторая от авторов Бейзкампа.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ngrok.com&quot;&gt;Ngrok&lt;/a&gt; - позволяет расшарить любой локальный порт прямо в интернет. &lt;code&gt;ngrok http 3000&lt;/code&gt; - просто запомните эту команду. Бесценно, когда
нужно показать приложение собеседнику по чатику, потестить его на айпеде, либо отладить работу с веб-хуками.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://xip.io&quot;&gt;Xip.io&lt;/a&gt; - wildcard-доменное имя к любому IP-адресу - &lt;code&gt;*.10.0.0.1.xip.io resolves to 10.0.0.1&lt;/code&gt;. У меня пока не было ни одного кейса,
когда бы это пригодилось, но я чувствую, что такие ситуации точно есть.&lt;/p&gt;

&lt;p&gt;Какие полезные утилиты для веб-разработки используете вы?&lt;/p&gt;

        </description>
        <pubDate>Wed, 19 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/19/ngrok/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/19/ngrok/index.html</guid>
      </item>
    
      <item>
        <title>Фейлы, они как файлы, только фейлы</title>
        <description>
          
          &lt;p&gt;В одном из докладов великолепного Алексея Рыбака были слова, что интересны не успехи, а фейлы. И я полностью согласен, что самые
теплые воспоминания оставляют именно события, где были тяжелые обстоятельства, да еще и сам оплошал, но в итоге
с честью выкрутился. Ну и в принципе все разговоры на вечеринках с коктейлями именно про проблемы, легаси, костыли и синюю
изоленту. Я не видел, чтобы два инженерами делились, какая у них большая пользовательская база, как тепло их любят пользователи,
какие великолепные показатели и перспективы, ми-ми-ми.
Поэтому всяким проблемам, проколам, особенно своим, я всегда уделяю самое пристальное
внимание.&lt;/p&gt;

&lt;p&gt;Итак сегодня руби и рейлс (примеры выдуманные, но основаны на реальных событиях):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calc_full_name&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# хе-хе, надо self.full_name = ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;k&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;v&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save!&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# хо-хо, нужно user.json_will_change! или переделать&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# хы-хы, 1 а не 1.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Это то что сходу вспомнил, чтобы написать очередной пост &lt;img class=&#39;emoji&#39; title=&#39;:smiley_cat:&#39; alt=&#39;:smiley_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63a.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;. Идеи то уже кончаются, а блог то еще писать не меньше 10 месяцев.
идет.&lt;/p&gt;

        </description>
        <pubDate>Tue, 18 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/18/failes/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/18/failes/index.html</guid>
      </item>
    
      <item>
        <title>Delayed Job - хак или фича?</title>
        <description>
          
          &lt;p&gt;Так сложилось, что мы пользуемся для всяких асинхронных задач &lt;a href=&quot;https://github.com/collectiveidea/delayed_job&quot;&gt;DelayedJob&lt;/a&gt;.
Удобно, что этот тот же постгрес, из коробки комфортный API, разумные дефалтовые настройки (например интервалы сколько
раз запускать упавшую задачу).&lt;/p&gt;

&lt;p&gt;Однако если задуматься, то DJ - эта та еще штука и при эксплуатации нужно знать его особенности.
Когда вы делаете
&lt;code&gt;User.find(1).delay.send_hello&lt;/code&gt;, то в базу сериализуется объект типа &lt;code&gt;User&lt;/code&gt; и факт, что к нему нужно применить
метод &lt;code&gt;:send_hello&lt;/code&gt;. Одноко, чтобы это работало как магия, при восстановлении &lt;code&gt;AR&lt;/code&gt;-объекта, на самом
деле он берется прямо из базы &lt;a href=&quot;https://github.com/collectiveidea/delayed_job/blob/2014009496dd0b2af217ab322f74f91fe4e26097/lib/delayed/psych_ext.rb#L30-L65&quot;&gt;psych_ext.rb#L30-L65&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;В большинстве случаев это просто работает, но могут быть необычные сайд эффекты. 
Если метод применяется к объекту, который
успели уже удалить, то будет ошибка 500. Или предположим, что пользователь два раза быстро нажал на восстановление пароля, вы
сохранили токен восстановления, письмо в очередь, потом токен перетерся новым, еще одно письмо в очередь. Если очередь затупила,
то в зависимости от того как реализован метод отправки письма, пользователь может получить либо два письма с разным токеном (первый
из них уже не будет работать), либо с самым свежим.&lt;/p&gt;

&lt;p&gt;Вообще 99% необычного поведения DJ проявляется, если очередь не успевает обрабатываться, поэтому ее обязательно нужно мониторить. А так можно
пользоваться. Работает.&lt;/p&gt;

        </description>
        <pubDate>Mon, 17 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/17/dj/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/17/dj/index.html</guid>
      </item>
    
  </channel>
</rss>
