<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Блог, милый блог. Новая история каждый будний день.</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Хероку</title>
        <description>
          
          &lt;p&gt;Мне хорошо запомнилась цитата из группы &lt;code&gt;ror2ru&lt;/code&gt;, что Хероку - для олигархов.
Я себя никогда не чувствовал и не
чувствую принадлежащим к этой группе людей, поэтому мне потребовались весьма значительные
усилия, чтобы решить держать там наши первые продакшены.&lt;/p&gt;

&lt;p&gt;В Хероку мы доросли до весьма солидных сумм в месяц, но это было несоизмеримо дешевле, чем если
бы нам тогда пришлось бы, кроме всего прочего, еще и возиться с серверами, бэкапами, мониторингом.
Поэтому Хероку - не для олигархов, а, как мне кажется, весьма правильный выбор,
даже сегодня, для любой компании,
которой уже требуется код, но нет еще каких-то космических задач.&lt;/p&gt;

&lt;p&gt;В цифрах, я бы сказал, что если прайс меньше 1000$ в месяц, нагрузки меньше 100 запросов в секунду,
база не больше 50Гб, а также нет требований о персоналке, то Хероку - идеален.&lt;/p&gt;

        </description>
        <pubDate>Tue, 21 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/21/se/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/21/se/index.html</guid>
      </item>
    
      <item>
        <title>docker run -p A:B vs git - 1:1</title>
        <description>
          
          &lt;p&gt;Запускать докер контейнеры я учился из интернета, в 99% статей это выглядит как-то так &lt;code&gt;docker
run -p 80:80 nginx&lt;/code&gt;, поэтому часто путал какой порт отвечает за хост, а какой за контейнер. Когда
они отличались, то решал задачу так же, как флешка вставляется в USB-порт, суперпозицией поворотов.&lt;/p&gt;

&lt;p&gt;Запомнить очень просто: &lt;code&gt;80:80&lt;/code&gt; - это сокращенная запись &lt;code&gt;hostIP:hostPort:containerPort&lt;/code&gt;, то есть
если я хочу повесить рейлс контейнер на &lt;code&gt;8080&lt;/code&gt;-й порт для интерфейса &lt;code&gt;192.168.12.27&lt;/code&gt;, то так и пишу:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;docker run -p 192.168.12.27:8080:3000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;либо, если интерфейс не важен, то команда - &lt;code&gt;docker run -p 8080:3000&lt;/code&gt;. Теперь не путаюсь.&lt;/p&gt;

&lt;p&gt;PS. жуткая команда для удаления ветки &lt;code&gt;git push origin :branch&lt;/code&gt; становится понятной, когда узнаешь, что
&lt;code&gt;git push origin branchA:branchB&lt;/code&gt;, отправляет локальную &lt;code&gt;branchA&lt;/code&gt; в &lt;code&gt;branchB&lt;/code&gt; на сервере, и если
отправить &amp;quot;пустоту&amp;quot; в серверную ветку &lt;code&gt;branch&lt;/code&gt;, то это будет равносильно удалению &lt;code&gt;branch&lt;/code&gt; на сервере.&lt;/p&gt;

        </description>
        <pubDate>Mon, 20 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/20/docker_ports/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/20/docker_ports/index.html</guid>
      </item>
    
      <item>
        <title>Скрипт целостности</title>
        <description>
          
          &lt;p&gt;На конференции я обещал выложить скрипт, который сравнивает DNSimple, Селектел и состояния терраформов.
Это не один скрипт, а несколько. Конечно они без комментариев и повышенной ламповости. Я вырезал
кое-что, но вот этот набор скриптов в целом должен работать, по крайней мере на наших данных запускается:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/avakhov/0ba88970111f20ced7c970d1d30516f2&quot;&gt;https://gist.github.com/avakhov/0ba88970111f20ced7c970d1d30516f2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Идея в том, что есть &lt;code&gt;backup_*&lt;/code&gt; скрипты, которые дампят в текстовом виде разные параметры системы.
Мы эти файлы храним в приватном репозитарии и я даже иногда поглядываю на изменения, кто
там что поменял. Далее запускается скрипт &lt;code&gt;check&lt;/code&gt;, вывод которого выглядит примерно так:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2/tc.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;То есть с днс-записями на картинке порядок, а вот состояние-терраформа кто-то не сдал.&lt;/p&gt;

&lt;p&gt;У нас таких &lt;code&gt;backup-*&lt;/code&gt; скриптов больше, но остальные решают еще более частные задачи.
Например, там есть проверка того, что
ночные бэкапы собрались и всякие другие штуки. Вот этот набор скриптов нам очень-очень помогает,
но я не знаю как их правильно обернуть, чтобы они помогли еще кому-нибудь. Если у вас есть идеи - буду
рад обсудить!&lt;/p&gt;

        </description>
        <pubDate>Fri, 17 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/17/integrity/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/17/integrity/index.html</guid>
      </item>
    
      <item>
        <title>Коллеги, я удалил сервер с VPN</title>
        <description>
          
          &lt;p&gt;Недавно замечательным терраформом грохнул несколько серверов, дело было так.
В файле &lt;code&gt;var.tf&lt;/code&gt; лежала переменная с ID-образа убунты примерно так &lt;code&gt;UBUNTU_IMAGE_ID = &amp;#39;cde3892-...&amp;#39;&lt;/code&gt;.
Я решил обновить образ на свежий и не прочитал, что написал &lt;code&gt;terraform plan&lt;/code&gt;, а зря. Терраформ, когда
у диска меняется переменная &lt;code&gt;image_id&lt;/code&gt;, пересоздает диск. Поэтому сервер на новом
образе я конечно создал, но еще заодно обновил старые сервера. Хорошо, что базы были на другом образе,
а так
бы веселья было чуть больше.&lt;/p&gt;

&lt;p&gt;Сейчас мы страхуемся тем, что в каждый диск копипастим конкретное значение в &lt;code&gt;image_id&lt;/code&gt;, &lt;code&gt;Ctrl-C Ctrl-V&lt;/code&gt; - рулят.&lt;/p&gt;

        </description>
        <pubDate>Thu, 16 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/16/terrafail/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/16/terrafail/index.html</guid>
      </item>
    
      <item>
        <title>Ansible Variables</title>
        <description>
          
          &lt;p&gt;В ансибл круто сделано, что можно передать переменную в очень многих слоях, как минимум в
&lt;code&gt;roles/vars&lt;/code&gt;, &lt;code&gt;roles/default&lt;/code&gt;, &lt;code&gt;group_vars&lt;/code&gt; и тд. И даже можно передать через командную строку.
Как-то захотел передать &lt;code&gt;false&lt;/code&gt;, попробовал так:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ansible-playbook system.yml --tags vpn --e vpn_fetch=false
ansible-playbook system.yml --tags vpn --e vpn_fetch=False
ansible-playbook system.yml --tags vpn --e vpn_fetch=no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;но сработал только вариант с JSON:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ansible-playbook system.yml --tags vpn --e &amp;#39;{&amp;quot;vpn_fetch&amp;quot;:false}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Далее этот флажок обрабатывается в роли привычным образом:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;- include: fetch.yml
  when: not vpn_fetch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        </description>
        <pubDate>Wed, 15 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/15/ansib/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/15/ansib/index.html</guid>
      </item>
    
      <item>
        <title>На стачку</title>
        <description>
          
          &lt;p&gt;В апреле коллеги из &lt;a href=&quot;https://cloudcastle.ru/&quot;&gt;CloudCastle&lt;/a&gt; приглашают на &lt;a href=&quot;https://nastachku.ru/&quot;&gt;Стачку&lt;/a&gt;,
секция девопс. С огромным удовольствием приеду! В Ульяновске был несколько раз, но обычно
было холодно и совсем не было времени. В этот раз собираюсь на три дня, поэтому, надеюсь,
успею погулять, познакомиться с городом.&lt;/p&gt;

&lt;p&gt;Хочу продолжить тему, начатую на ДевОпсДейс, какие приемы помогали нам строить
инфраструктуру и разработку в условиях
роста компании. Накопилось много интересного, чем хочется поделиться, обменяться мнениями.
Я поработаю над техникой доклада, добавлю побольше
кейсов, историй, провокаций. Так, что если все пойдет как запланировано, то встретимся на Стачке!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;В одной книге я читал про такую психологическую защиту, что когда боишься чего-нибудь - экзамена,
выступления, то готовишься очень мало или вообще не готовишься. Когда облажаешься, а если не готовиться
то как может быть иначе, организм себя оправдает, что дескать, так вышло, потому-что мало
готовился. Эта защита подпитывается тем фактом, что если что-то делаешь в первый раз, то сколько бы
не старался, то все равно будешь выглядеть не очень.&lt;/p&gt;

&lt;p&gt;Противная штука и ее действие испытал в полном объеме при подготовке в этот раз.
Вообще начал готовиться
месяца за полтора, но довольно вяло. Каждый раз, когда садился за доклад, находилось
тысяча дел, которые нужно
было сделать очень, очень срочно.&lt;/p&gt;

&lt;p&gt;Обмануть природу мне помогли организаторы. Где-то недели за две до
события они прислали официальный шаблон
презентации (клевый, с ним с первых шагов стало получаться красиво), также установили
дедлайн на 7 марта. Но самое главное, что Константин Назаров предложил свою помощь
в подготовке всем выступающим. Я записался на созвон за неделю до доклада, и таким искусственным дедлайном
как минимум заставил себя подготовить слайды, написать текст выступления и подогнать его на 20 минут.&lt;/p&gt;

&lt;p&gt;Потом каждый день я повторял доклад по 2-3 раза каждый день, записывал на видео. Но в любом случае, когда
увидел полный зал на 400 человек, очень сильно захотелось сказать: &amp;quot;ой, я кажется заболел и не смог прийти&amp;quot;.
Но не сказал и выступил &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:beer:&#39; alt=&#39;:beer:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f37a.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/14/nastachky/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/14/nastachky/index.html</guid>
      </item>
    
      <item>
        <title>DevOpsDays Moscow - 2017</title>
        <description>
          
          &lt;p&gt;В субботу прошла конференция &lt;a href=&quot;http://devopsdays.ru/&quot;&gt;ДевОпсДейс&lt;/a&gt;. Вау, это было круто, три котика
однозначно &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;! Очень понравилась организация мероприятия,
начиная с того, что начали пушить с докладом
за две недели, чтобы не было шанса не подготовится, и заканчивая четкостью проведения самого события -
строго выдержан хронометраж, классные доклады, огромное количество интересных людей.
Я волновался, первый раз выступал на технической конференции за несколько последних
лет, но вроде бы материал в целом понравился, спасибо большое за внимание, вопросы и обратную связь!&lt;/p&gt;

&lt;p&gt;Материалы с доклада:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/AlexeyVakhov/paas-paas&quot;&gt;PaaS, выделенные сервера, облако и снова PaaS&lt;/a&gt; - слайды.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.selectel.ru/gostevoj-post-upravlyaem&quot;&gt;Управляем «Виртуальным приватным облаком» с помощью Terraform&lt;/a&gt; - пост в блоге Селектела про терраформ.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uchiru/grafana-rb&quot;&gt;grafana-rb&lt;/a&gt; - гем для создания дешбордов графаны (сыренький пока, я просто завернул в гем наш внутренний скрипт &lt;code&gt;grafana.rb&lt;/code&gt;, с удовольствием помогу адаптировать под ваши задачи, мои контакты внизу).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ndiazg/nginx-prometheus-exporter&quot;&gt;ndiazg/nginx-prometheus-exporter&lt;/a&gt; - mtail, завернутый в контейнер. Вот &lt;a href=&quot;https://github.com/ndiazg/nginx-prometheus-exporter/blob/master/files/progs/nginx.mtail&quot;&gt;такие регекспы&lt;/a&gt; хорошо работает с &lt;code&gt;access.log&lt;/code&gt; nginx&amp;#39;а, если логи собираются в формате, описанном в
&lt;a href=&quot;https://github.com/ndiazg/nginx-prometheus-exporter#nginx-settings&quot;&gt;README-файле&lt;/a&gt;. У нас этот контейнер
слушает по несколько гигабайт логов в день на каждом сервере, в чем-то подозрительном замечен не был.&lt;/li&gt;
&lt;li&gt;Магический скрипт, который сравнивает разницу Селектела, DNSimple и терраформ-состояний выложу на этой неделе, хочу еще подумать, как его оформить.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Я сказал, что прометей подглючивает, и был вопрос как он это делает.
Наверное это просто субъективное ощущение, которое осталось
после перехода с заббикса. В заббиксе мы строили (опять с помощью магических руби-скриптов)
дешборды, где на каждой строке был один сервер, а сервера прописывали ручками. Было очень топорно и в лоб.&lt;/p&gt;

&lt;p&gt;В прометее сервера
ищутся с помощью консул-дискавери и релейбелинга. Когда я строю график какой-нибудь типа
такого &lt;code&gt;sum(rate(http_requests_total{code=&amp;quot;200&amp;quot;,job=&amp;quot;front&amp;quot;}[1m]))&lt;/code&gt;, то нет четкой уверенности, что
это именно будет сумма 200-х запросов по аппликейшен серверам. Может быть кто-нибудь неправильно
настроил теги консул-сервисов и сюда попали лишние запросы или не попали нужные. То есть подглючивание
скорее связано с тем, что я еще не до конца привык к более динамическому окружению.&lt;/p&gt;

&lt;p&gt;Контакты:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;mailto:vakhov@gmail.com&quot;&gt;vakhov@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://t.me/avakhov&quot;&gt;telegram - @avakhov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/13/dod/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/13/dod/index.html</guid>
      </item>
    
      <item>
        <title>Постмодерн</title>
        <description>
          
          &lt;p&gt;Cервер, в котором древние &lt;code&gt;chruby&lt;/code&gt;-роли, качают &lt;code&gt;chruby&lt;/code&gt; из интернета, лезущий за файлом
&lt;a href=&quot;https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/checksums.sha512&quot;&gt;checksums.sha512&lt;/a&gt;, недоступным вчера несколько часов, накатывал вчера я. Шах и мат, господа мои дорогие. Нету файла - нету
и сервера &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

&lt;p&gt;Выглядело это так:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl url

....
&amp;lt;h1&amp;gt;Error 503 first byte timeout&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;first byte timeout&amp;lt;/p&amp;gt;
&amp;lt;h3&amp;gt;Guru Mediation:&amp;lt;/h3&amp;gt;
&amp;lt;p&amp;gt;Details: cache-ams4123-AMS 1489075171 688230291&amp;lt;/p&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Лучшим решением оказалось написать тикет в гитхаб, и через несколько часов проблема ушла. В этой истории
символично, что репозитарий, в котором лежит злосчастный файл, называется &lt;code&gt;postmodern&lt;/code&gt;.&lt;/p&gt;

        </description>
        <pubDate>Fri, 10 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/10/postmodern/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/10/postmodern/index.html</guid>
      </item>
    
      <item>
        <title>Линейка</title>
        <description>
          
          &lt;p&gt;Когда я вел блог в прошлый раз, то моим KPI было количество подписчиков в твиттере.
Сейчас это не работает,
старый прием простого репоста каждой истории просто перестал работать. Значит надо брать новую
линейку.&lt;/p&gt;

&lt;p&gt;Тадам! Добавил подписку на новости сайта - это будет новая метрика.
У меня есть идеи
о расширении активности, поэтому в
рассылке будет обязательно какой-нибудь эксклюзивчик.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Если вам нравится блог и вы хотите его поддержать,
заполните пожалуйста форму наверху сайта.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Спасибо, вы супер!
&lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;
&lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;
&lt;img class=&#39;emoji&#39; title=&#39;:cat:&#39; alt=&#39;:cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f431.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;

        </description>
        <pubDate>Thu, 09 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/09/marketing/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/09/marketing/index.html</guid>
      </item>
    
      <item>
        <title>Бэкапы</title>
        <description>
          
          &lt;p&gt;Сам факт бэкапов (особенно, восстанавливаемость которых каких-то образом проверятся), в некоторых
дискуссиях
преподносится, как высшая степень профессионализма. Конечно бэкапы это хорошо, но классических
&lt;code&gt;pg_dump-&lt;/code&gt;, &lt;code&gt;WAL-логов&lt;/code&gt; или каких-то подобных бинарей, даже разложенных в географически удаленные точки,
в идеальном мире недостаточно.&lt;/p&gt;

&lt;p&gt;Классно было бы время от времени подниматься с бэкапа, полностью зарубая
старый сторадж. Тогда архив, с которого мы поднялись, был бы эталонным для точки поднятия. Если продакшен
работает дальше, значит мы владеем реальным дампом продакшена на тот момент.
В гуглах всяких насколько понимаю как-то так и делают, постоянно поднимая какие-то данные из бэкапов,
но вот какого-то рабочего подхода для маленьких и гордых пока не встречал.&lt;/p&gt;

&lt;p&gt;В этом плане я в восторге от гита. В сущности IT-ценность стартапа - это код и базы. Код в гите со всей историей раскладывается в так много точек, что его сложно потерять целиком, а вот с базами так пока не
получается. Поэтому битва с бэкапами продолжается и выиграть ее нельзя, задача - все время играть в ничью.&lt;/p&gt;

        </description>
        <pubDate>Tue, 07 Mar 2017 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2017/03/07/backups/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2017/03/07/backups/index.html</guid>
      </item>
    
  </channel>
</rss>
