<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Блог, милый блог. Новая история каждый будний день.</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Рефакторинг</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/refactoring/main.jpg&quot; /&gt;
          &lt;p&gt;Рефакторинг тема как известно тонкая, поэтому сразу скажу - к переписыванию работающего продакшен-кода я отношусь
отрицательно, как бы это не называлось. Правило &amp;quot;работает - не трогает&amp;quot; достаточно хорошо проверено временем.&lt;/p&gt;

&lt;p&gt;Сейчас постараюсь пояснить, как мыслю. Представьте, что мы на оси времени находимся
в точке &lt;code&gt;А&lt;/code&gt;. Единственная объективная реальность - это тот код, который сейчас находится на продакшене
(этим кстати мне нравится гитхаб-флоу, мастер - всегда в продакшене, в ветках -
что хочешь то и делаешь, дело личное, точка опасности - мерж пул реквеста в мастер). Так вот в точке
&lt;code&gt;А&lt;/code&gt;, глядя на наш продакшен, мы видим проблемы кода и всегда примерно понимаем как выглядит точка &lt;code&gt;B&lt;/code&gt;, 
в которой сегодняшний функционал был бы &amp;quot;идеально&amp;quot; выражен в коде.&lt;/p&gt;

&lt;p&gt;Я уверен, что большая ошибка начинать движение в точку &lt;code&gt;B&lt;/code&gt; (в принципе это и есть рефакторинг -
изменение кодовой базой без изменения функционала). Время то движется вперед
и вы оказываетесь в точке &lt;code&gt;C&lt;/code&gt; с устаревшим кодом (&amp;quot;идеальным&amp;quot; кодом на момент &lt;code&gt;A&lt;/code&gt;). В процессе движения
выяснится, что точка &lt;code&gt;B&lt;/code&gt; - тоже не совсем хороша. В голове - идея была хорошая, а в
реализации оказалось не очень. Тогда начинаете движение в точку &lt;code&gt;B&amp;#39;&lt;/code&gt;, потом в &lt;code&gt;B&amp;#39;&amp;#39;&lt;/code&gt; и так далее. Поэтому переписывание
продакшен кода в моей системе ценности - в большинстве случаев ошибка, это работа на прошлое.&lt;/p&gt;

&lt;p&gt;Что я предлагаю вместо этого. Допустим мы продолжим пилить новые фичи как сегодня. То наш код
шатко-валко, вместе с нами, доползет до точки &lt;code&gt;C&lt;/code&gt;. И для этого горемыки, так же будет
&amp;quot;идеальный&amp;quot; код - точка &lt;code&gt;D&lt;/code&gt;. Естественно это не точка (как и впрочем все остальные точки - не точки), это
облачко возможных хороших реализаций той системы, которая будет в момент &lt;code&gt;C&lt;/code&gt;.
Так вот я твердо уверен, что &lt;strong&gt;нужно менять не сегодняшний работающий код, а менять
привычки, которые приведут проект в более здоровую точку &lt;code&gt;D&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;У меня есть такая аналогия. Допустим человек решил привести себя в форму. Можно поступить хирургически, радикально. Быстро - но
много побочных эффектов, жесткий отходняк. Либо человек меняет привычки: разбирается с режимом дня,
правильно питается, регулярно занимается в зале.
То есть
по факту он ведет себя уже, прямо сейчас, как здоровый человек, но сегодняшнее состояние пока не очень.&lt;/p&gt;

&lt;p&gt;Поэтому, как бы код не был плох, я считаю,
что нужно прежде всего разобраться какие привычки довели его до такого состояния и что нужно поменять, чтобы привести его
со временем в порядок.&lt;/p&gt;

        </description>
        <pubDate>Tue, 15 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/15/refactoring/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/15/refactoring/index.html</guid>
      </item>
    
      <item>
        <title>Убить Базу Билла</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/kill-db/main.jpg&quot; /&gt;
          &lt;p&gt;У нас каждую ночь в спец енвайроменте поднимаются все продакшены базы из бэкапов. Это приследует несколько
целей: проверить, что в принципе из бэкапов можно восстановится, а так же аналитики делают
некоторые ad hoc запросы без доступа на продакшен и привлечения программистов.&lt;/p&gt;

&lt;p&gt;Для экономии места сохраняются две или три самых свежих базы, а остальные удаляются. Стандартный
&lt;code&gt;dropdb&lt;/code&gt; не удалит базу, если к ней остались коннекшены, в интернетах советуют рестартить постгрес
целиком, но это немного овер даже для тестовой базы. Решение, которое мне больше всего нравится, выглядит
так:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;psql &lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt; -c&lt;span class=&quot;s1&quot;&gt;&amp;#39;SELECT pg_terminate_backend(pid) FROM pg_stat_activity&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;            WHERE pid &amp;lt;&amp;gt; pg_backend_pid();&amp;#39;&lt;/span&gt;
dropdb &lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Вроде работает хорошо.&lt;/p&gt;

        </description>
        <pubDate>Mon, 14 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/14/kill-db/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/14/kill-db/index.html</guid>
      </item>
    
      <item>
        <title>Подготовка компьютера к работе</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/prepare-pc/main.jpg&quot; /&gt;
          &lt;p&gt;Когда-то давно я настраивал винду и линукс под себя, ставил нескучные обои и делал кучу тонких настроек под себя. А потом, в какой-то момент
стал наоборот любить максимально стандартные настройки. Более того где-то раз в год я переставляю OS с нуля и проверяю какими вредными
привычками или лишним софтом оброс за это время. Во время облаков, смузи и тотального джаваскрипта так можно делать. Документы у меня в гугл
драйв, фотошоп не нужен (да и то вроде сейчас легко по подписке ставится), настройки вима - на гитхабе, а больше ничего и не надо для счастья.&lt;/p&gt;

&lt;p&gt;Кроме того я написал скриптец, который накатывает необходимые файлы и ключи. Текст его не буду приводить, это просто портянка на баше (не на руби,
так как в момент запуска на свежей машине, руби может еще и не быть). Он берёт шифрованный архив с дропбокса и раскадывает все возможные &lt;code&gt;.bash_profile&lt;/code&gt;,
&lt;code&gt;.gitconfig&lt;/code&gt;, &lt;code&gt;vpn&lt;/code&gt;-ключи и прочее. Шифрование сделал по типу ансибловловского &lt;code&gt;vault.key&lt;/code&gt;, чтобы магия сработало рядом со скриптом синхронизации нужно положить файл
с ключом.&lt;/p&gt;

&lt;p&gt;Благодаря привычке работать на стандартной конфигурации я совершенно спокойно перехожу с рабочего компьютера на домашний и обратно
(главное не забывать часто комититься, чтобы файлы не зависли между небом и землей), могу работать в убунту, как живой, так и в виртуалке. На телефоне я стараюсь привыкать
только к тем приложениям, которые есть и на iOS, и на андроиде.&lt;/p&gt;

&lt;p&gt;Вообщем борюсь с вендор локом на бытовом уровне. А сколько времени вам понадобится, чтобы продолжить работу на чистом компьютере (с хорошим интернетом мне - меньше часа)?&lt;/p&gt;

        </description>
        <pubDate>Fri, 11 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/11/prepare-pc/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/11/prepare-pc/index.html</guid>
      </item>
    
      <item>
        <title>Философское</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/phil/main.jpg&quot; /&gt;
          &lt;p&gt;Всем привет! Блог у меня окончательно превращается в жежешечку. Ну а что вы хотели, про все утилиты я уже рассказал, что мог, новые
появляются не каждый день и тем более использовать я их начинаю не каждый день, ссылки всякие постить не люблю. То есть для блога
остаются только истории из жизни, какие-то профессиональные приемы и мысли. Вот когда первые две категории заканчиваются, начинаются
посты третьего типа. Так что терпите, мыслить люблю &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

&lt;p&gt;Зато не люблю нравоучения и обобщения, как от других, так и от себя, поэтому большая просьба
относится к моим словам именно как историям и мыслям, за жирными скобками именно моего конкретного опыта. Как я могу разбираться
в разработке в целом? Или как надо что-то делать и как не надо? (или кто любой другой?) Я за 12 лет работал всего в трех компаниях. А даже если бы в двадцати? Любое
мнение - субъективное (и это не ругательство, так как означает, что и означает - мнение выраженное субъектом, в мире есть всего пару объективных вещей, там
типа законов Ньютона и прочего, да и то).&lt;/p&gt;

&lt;p&gt;Так вот, еще я не люблю &amp;quot;так положено&amp;quot; или &amp;quot;авторитет так говорит&amp;quot;, проверяю все на свой вкус, самые крепкие знания получаются. Вот откуда я знаю по тысяча и
одно падение продакшена? Гхм. Знаю, ронял &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;. И миграции под нагрузкой, и правку кода ручками на продакшене,
и настройка iptables на удаленном сервере, много попробовал
за хипстерскую юность компании и много где отхватил. Так, что могу сказать, гуру не врут (а где-то кстати и врут, мир меняется, принципы тоже, надо проверять).
И опять, что одним хорошо, другим может не подойти. Везде контекст, везде конкретика.&lt;/p&gt;

        </description>
        <pubDate>Thu, 10 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/10/phil/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/10/phil/index.html</guid>
      </item>
    
      <item>
        <title>Ansible Jet Black</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/ansible-jet-black/main.jpg&quot; /&gt;
          &lt;p&gt;Ансибл мне очень нравится (особенно по сравнению с ручной настройкой FreeBSD, как пришлось делать 10 лет назад для запуска первого
рейлс приложения), но пару вещей сделало бы ансибл еще лучше, если бы это было возможно технически.&lt;/p&gt;

&lt;p&gt;В основе моей еще одной любимой утилиты - терраформ, лежит сильная идея, которой немного не хватает в ансибле. В файлах терраформинга вы описываете
желаемый результат без учета сегодняшнего состояния. Вы просто заказываете себе 3 сервера, и специальная магия добавляет 2 сервера,
если у вас был один или удаляет семь, если у вас сейчас 10.
На мой вкус очень мощная концепция, которая сейчас также реализуется в системах оркестрации. В ансибл в принципе также,
когда вы только добавляете или что-то изменяете, но так как состояние не сохраняется, то удалять приходится явно. Не достаточно просто удалить
запись о крон-задаче или настройке сайта NGINX из рецептов, их нужно удалить явно. Мелочь, а могло быть лучше, в идеальном мире.&lt;/p&gt;

&lt;p&gt;В принципе поддерживать и обновлять долгоживущий сервер с помощью Ансибл или Шефа довольно напряжно. Тут на помощь спешит другая концепция: давайте просто
накатим сервер с нуля и убьем старый. Мне нравится этот подход, но он требует мощной системы управления инфраструктурой и не годится для серверов с состоянием.
Так же всплывает еще одна
досадная вещь - ансибл выполняется медленно. Конечно это ограничения современных OS, чтобы поставить тяжеленький пакет со всеми зависимостями - нужно время.
Но я же мечтаю. А в идеальном мире ансибл должен выполнятся почти мгновенно. Вы просто заказываете какое приложение и какой софт вам нужен, ахалай махалай - и все
работает.&lt;/p&gt;

&lt;p&gt;В этом плане терраформ позволяет прикоснуться к будущему. Очень приятно наблюдать как он шустренько создает сети, диски и сервера. И очень страшно
смотреть, как он их удаляет. На днях я удалял больше десятка серверов после проведения основного тура олимпиады по русскому языку, блин, я запустил
&lt;code&gt;terraform plan&lt;/code&gt; раз пять, прежде чем набрался духа выполнить &lt;code&gt;terraform apply&lt;/code&gt;. Вжжиих и четырнадцати серверов нет, реально внушает уважение и почтение.&lt;/p&gt;

&lt;p&gt;С нетерпением жду будущего.&lt;/p&gt;

        </description>
        <pubDate>Wed, 09 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/09/ansible-jet-black/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/09/ansible-jet-black/index.html</guid>
      </item>
    
      <item>
        <title>Травмирован C++</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/cpp/main.jpg&quot; /&gt;
          &lt;p&gt;В прошлой C++-жизни я программировал софт для биржи и за идею, что можно забить на обслуживание
какого-то количества пользователей или что редкая ошибка никому не мешает, меня бы обязательно отпинали ногами.
Поэтому первое время в вебе мне хотелось
правильно и корректно обработать абсолютно каждый запрос.
К счастью дальше желания дело не зашло и я довольно
быстро (где-то за полгода) подхватил дух и букву рейлс-разработки.&lt;/p&gt;

&lt;p&gt;Один момент из многих, которые меня взбесили в рейлс, я помню. Когда узнал,
что кэширование (вот эти все сохранения вьюх и их фрагментов из Depot-приложения) реализовано
через файл. Грхх! Сохранение файла - это
же не атомарная операция &lt;img class=&#39;emoji&#39; title=&#39;:scream_cat:&#39; alt=&#39;:scream_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f640.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:see_no_evil:&#39; alt=&#39;:see_no_evil:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f648.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; &lt;img class=&#39;emoji&#39; title=&#39;:confused:&#39; alt=&#39;:confused:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f615.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;! Как же можно быть такими безответственными.&lt;/p&gt;

&lt;p&gt;Мда. Вот такие вещи меня смущали тогда.&lt;/p&gt;

        </description>
        <pubDate>Tue, 08 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/08/cpp/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/08/cpp/index.html</guid>
      </item>
    
      <item>
        <title>Устои шатал - 2</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/shatal2/main.jpg&quot; /&gt;
          &lt;p&gt;Сегодня еще пошатаем. Как мы все помним, тестирование - это просто один из фильтров качества
Так вот есть еще одна моральная категория - это аджайл, скрам и все такое.&lt;/p&gt;

&lt;p&gt;В чем проблема аджайл? Так же как и идеальное тестирование - его в живую никто не видел. Вот есть там
инженеры за тридевять земель, у которых самые
канонические процессы, а нам надо молиться и благоговеть. Мне кажется это немного неправильно. Сейчас все команды в том или ином
смысле аджайл, говорить, что одни гибкие, а другие не очень, это как защищать шариковые ручки, перед гусиными перьями. Вроде бы
и не зачем. Абсолютно все команды планируют и обсуждают с разной степенью успешности,
работают по каким-то естественным временным интервалам, катят новые версии пореже или почаще. Гибкие - все. Но конечно по разному. Это
да. Задачи разные, люди разные, история разная. Не правильно требовать одинаковости (кстати чем ярые защитники методологий часто и
грешат, они хотят, чтобы все было как-то слишком одинаково).&lt;/p&gt;

&lt;p&gt;Если честно я очень слаб в терминалогии, хотя читал много статей, книг и даже
какую-то толстенную книгу по скраму, страниц на 800.
Аджайл, это принцип, набор добрых советов, методология? Хм. Не знаю. Могу путать, извините заранее. Например
в айкидо, в котором я к сожалению добрался всего до 4 кю и сошел с трассы, на каждом новом этапе количество техник увеличивается и
составляет несколько сотен к первому дану. Потом все обратно сводится к двум базовым движениям. И далее вообще к одному у великих мастеров.&lt;/p&gt;

&lt;p&gt;Так и в программировании. Пик знаний всяких хитрых C++-приемов у меня был на третий-пятый годы работы, потом начал забывать. Я просто научился
программировать, ориентироваться в контексте. Это как езда на велосипеде -
можно перестать думать про контроль кучи факторов и просто
наслаждаться поездкой. На одном собеседовании меня спросили, можно ли конструктор без агрументов вызвать из
конструктора с аргументами. Я ответил (если выразить мой ответ цветасто),
что C++ - многогранен, аки дьявол и наверняка можно, раз вы спрашиваете, но к сожалению
мне этот аспект языка не знаком. И практического смысла в вашем вопросе не вижу. Мой ответ наверное приняли, так как оффер прислали &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

&lt;p&gt;Сейчас, допустим, я точно не знаю чем отличается &lt;code&gt;{}&lt;/code&gt; от &lt;code&gt;do end&lt;/code&gt;,
или что более канонично &lt;code&gt;proc&lt;/code&gt; или &lt;code&gt;labmda&lt;/code&gt;.
Просто видел много кода
и мне кажется довольно разумно употребляю то или иное. Где-то на грани ощущений чувствую, что разница есть, нагуглю если
прижмет, и твердо уверен, что если в продакшен-коде знание этой разницы существенно для понимания программы, то автор кода - не прав.&lt;/p&gt;

&lt;p&gt;К процессам у меня такое же отношение.
Совершенно обязательно нужно узнать разнообразие подходов, поработать в разных трекерах и экселе,
попроводить ежедневные митинги, повести доску с магнитиками, поиграть в покер. И потом выбирать из этого всего то,
что подходит к каждой
конкретной ситуации.&lt;/p&gt;

&lt;p&gt;У меня почему-то в голове темы &amp;quot;тестируй или погибнешь&amp;quot;, &amp;quot;скрам или сдохни&amp;quot;, &amp;quot;ооп без жалости и границ&amp;quot; - это все разные обличия 
одного и того же молодецкого максимализма, который с годами (а для IT у меня достаточно солидный возраст - 32 годика уже) перерастает
в какие-то более спокойные формы. Перефразируя слова, которые приписывают Черчилю, скажу,
что если после 5 лет работы, вы не знаете все тонкости языка, на котором работаете и не проповедуете аджайл
радикального характера, у вас
нет сердца, но если после 10 лет вы это все благополучно не забыли, сердца у вас все равно нет &lt;img class=&#39;emoji&#39; title=&#39;:stuck_out_tongue_winking_eye:&#39; alt=&#39;:stuck_out_tongue_winking_eye:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f61c.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Mon, 07 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/07/shatal2/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/07/shatal2/index.html</guid>
      </item>
    
      <item>
        <title>Неблокирующие UDP</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/udp/main.jpg&quot; /&gt;
          &lt;p&gt;4 года назад я зажегся вот этим постом -
&lt;a href=&quot;https://signalvnoise.com/posts/3091-pssst-your-rails-application-has-a-secret-to-tell-you&quot;&gt;Pssst... your Rails application has a secret to tell you&lt;/a&gt;
и тут же начал отправлять метрики в &lt;a href=&quot;https://www.hostedgraphite.com/&quot;&gt;HostedGraphite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Подключил, прямо как в &lt;a href=&quot;https://www.hostedgraphite.com/docs/languageguide/lg_ruby.html#sending-a-metric-via-udp&quot;&gt;документации&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;socket&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UDPSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;YOUR-API-KEY.foo 1.2&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;carbon.hostedgraphite.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но внезапно сайт стал скручивать ласты. 
Думаю вы уже догадались, хотя UDP-сообщения неблокирующие,
а запросы к DNS еще как блокирующие.
У хостера начались проблемы с DNS и сайт стал тормозить даже на маленькой
нагрузке. Так что с хостед версией графита у нас не срослось. Увы.&lt;/p&gt;

        </description>
        <pubDate>Thu, 03 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/03/udp/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/03/udp/index.html</guid>
      </item>
    
      <item>
        <title>Как вы яхту назовете</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/right/main.jpg&quot; /&gt;
          &lt;p&gt;Родилась у нас как-то раз шутка, что любое решение можно выставить хорошим, просто подобрав правильный
термин.&lt;/p&gt;

&lt;p&gt;Смотрите, допустим, - &lt;strong&gt;монолит&lt;/strong&gt;.&lt;br&gt;
- Фу-у-у.&lt;br&gt;
&lt;strong&gt;Микросервисы&lt;/strong&gt;!&lt;br&gt;
- м-м-м, парень понимает толк в жизни.&lt;/p&gt;

&lt;p&gt;А теперь внимание - &lt;strong&gt;монорейлс&lt;/strong&gt;!&lt;br&gt;
- Вау, крутяк!&lt;br&gt;
И снова мужики встают, когда вы входите в пивную.&lt;/p&gt;

&lt;p&gt;А чем &lt;strong&gt;монолит&lt;/strong&gt; отличается от &lt;strong&gt;монорейлса&lt;/strong&gt;?
Только тем, что во втором случае придуман новый, свежий термин
(вообще я не знаю насколько он используется, просто видел в одной статье).
То есть это с одной стороны и шутка, а с другой и не очень шутка. Маркетинг уже
очень прочно проник в инженерное дело, дажe в опен сорс. Сегодня оформлению идей, а не только
содержанию, стоит уделять самое пристальное внимание. &lt;/p&gt;

&lt;p&gt;И мне кажется это здорово. Я вообще за доходчивость и изящество, за чистоту идей и красоту подачи.
Наример хорошую историю,
не приврав чуть-чуть или весьма сильно, вообще не раскажешь. Так и в профессии.
По возможности лучше не скатываться совсем уж в булшит-бинго, но придумать какую-нибудь
метафору или подобрать сочный, яркий термин для описании ситуации по-моему мнению всегда полезно.&lt;/p&gt;

        </description>
        <pubDate>Wed, 02 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/02/right/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/02/right/index.html</guid>
      </item>
    
      <item>
        <title>Преждевременный мониторинг</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/early_monitoring/tonya.png&quot; /&gt;
          &lt;p&gt;&lt;em&gt;
Наша великолепная коллега Тоня нарисовала иллюстрацию для сегодняшней истории. Спасибо, Тоня! Три котика:
&lt;img class=&#39;emoji&#39; title=&#39;:smiley_cat:&#39; alt=&#39;:smiley_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63a.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;
&lt;img class=&#39;emoji&#39; title=&#39;:smiley_cat:&#39; alt=&#39;:smiley_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63a.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;
&lt;img class=&#39;emoji&#39; title=&#39;:smiley_cat:&#39; alt=&#39;:smiley_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63a.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.
&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;quot;Преждевременный&amp;quot; - само слово несет в себе негативный оттенок. Мы все знаем про преждевременную
оптимизацию, но я также верю, что есть преждевременный мониторинг, преждевременная архитектура,
преждевременная автоматизация, преждевременное тестирование (для разнообразия речь идет о кроссбраузерном
тестировании, предполжим кто-то делает MVP в 11 версиях браузеров одновременно, &lt;img class=&#39;emoji&#39; title=&#39;:open_mouth:&#39; alt=&#39;:open_mouth:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f62e.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;)
и много еще всего
преждевременного.&lt;/p&gt;

&lt;p&gt;Хочу поделиться одним наблюдением. Представьте, что вы отправляете
в публичный канал информацию из любой системы мониторинга. В этом случае приходится, что называется
&amp;quot;отвечать за базар&amp;quot;. Например, вдруг система начинает срабатывать слишком часто, даже ложно
(а кто знает
ложно или не ложно, надо разбирать каждый случай), она спамит канал
и о вас думают плохо.&lt;/p&gt;

&lt;p&gt;Также люди неявно ожидают реакции на каждую неполадку.
Допустим ночью 5 раз отправился сигнал, что сайт не доступен. Коллеги приходят
на работу, видят кучу красных сообщений, и если нет никаких комментариев,
они думают, что вам все по барабану. Я не ханжа,
бывают ситуации, когда действительно по барабану ночные (а иногда и дневные) падения, красные тесты
и так далее. Но надо помнить, что если вы понимаете и принимаете какие-то компромисы, не
обязательно это будет очевидно стороннему наблюдателю.&lt;/p&gt;

&lt;p&gt;Публичный контракт - страшная вещь. Помню, что криво настроенный заббикс, мне
слал каждый день по 10-50 писем, которые я спокойно просматривал и удалял довольно долго.
Не было времени настроить нормально, однако среди алертов был небольшой процент значимых, поэтому отключить
совсем тоже было нельзя. Если бы такое количество писем приходило бы генеральному, он был бы
очень встревожен происходящим. Хотя качество продакшена соответствовало 
уровню сервиса на тот момент.&lt;/p&gt;

&lt;p&gt;Уверен, что продукт должен развиваться равномерно. Если сервис в зачаточном
состоянии, то и мониторинг должен быть зачаточным, самый минимум. Так как грамотная настройка
алертов и отладка процесса реагирования на инциденты могут оказаться слишком трудоемкими и избыточными, пока
достаточно &amp;quot;чик-чик и в продакшен&amp;quot;.&lt;/p&gt;

        </description>
        <pubDate>Tue, 01 Nov 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/11/01/early_monitoring/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/11/01/early_monitoring/index.html</guid>
      </item>
    
  </channel>
</rss>
