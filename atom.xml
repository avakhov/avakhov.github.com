<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexey Vakhov</title>
    <description>Блог, милый блог. Новая история каждый будний день.</description>
    <link>http://vakhov.me</link>
    <atom:link href="http://vakhov.me/atom.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Терраформим Селектел</title>
        <description>
          
          &lt;p&gt;Научился терраформить Селетел я далеко не сразу, пришлось даже немного его подебажить и
openstack-утилиты. Кстати будете дебажить терраформ, сначала попробуйте запустить его с
&lt;code&gt;TF_LOG=1&lt;/code&gt;, может быть
поможет, так как компилируется он довольно долго, хоть и написан на Го.&lt;/p&gt;

&lt;p&gt;Вообще, &lt;a href=&quot;https://www.terraform.io/&quot;&gt;терраформ&lt;/a&gt; - это волшебная утилита для первичного
создания серверов, настройки DNS, всевозможных штук в Амазоне и прочих вещей. Это такой ансибл для
инфраструктуры, с отличной идеологией. Вы пишите в скрипте: &amp;quot;хочу: чтобы у меня были два таких бокса,
соответсвующие днс-записи и бакет на амозоне&amp;quot;, терраформ смотрит что у вас есть сейчас и добавляет
необходимо, либо удаляет избыточное. Там конечно немного нужно приноровится, но штука совершенно
космическая.&lt;/p&gt;

&lt;p&gt;Так вот заводите аккаунт в селектеле, добавляете туда проект и вперед:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;provider &amp;quot;dnsimple&amp;quot; {
    email = &amp;quot;${var.DNSIMPLE_EMAIL}&amp;quot;
    token = &amp;quot;${var.DNSIMPLE_TOKEN}&amp;quot;
}

provider &amp;quot;openstack&amp;quot; {         
  auth_url  = &amp;quot;https://api.selvpc.ru/identity/v3&amp;quot;
  domain_name = &amp;quot;${var.DOMAIN_NAME}&amp;quot;
  tenant_name = &amp;quot;${var.PROJECT_ID}&amp;quot;
  tenant_id = &amp;quot;${var.PROJECT_ID}&amp;quot;
  user_name  = &amp;quot;${var.USER}&amp;quot;
  password  = &amp;quot;${var.PASSWORD}&amp;quot;
}

variable &amp;quot;external_gateway&amp;quot; {
  default = &amp;quot;ab2264dd-bde8-4a97-b0da-5fea63191019&amp;quot; # hardcoded gw for selectel
}

resource &amp;quot;openstack_networking_network_v2&amp;quot; &amp;quot;network&amp;quot; {
  name = &amp;quot;network&amp;quot;           
  admin_state_up = &amp;quot;true&amp;quot;      
  region = &amp;quot;${var.REGION}&amp;quot;
}

resource &amp;quot;openstack_networking_subnet_v2&amp;quot; &amp;quot;subnet&amp;quot; {
  name = &amp;quot;subnet&amp;quot;            
  network_id = &amp;quot;${openstack_networking_network_v2.network.id}&amp;quot;
  cidr = &amp;quot;10.0.0.0/24&amp;quot;
  ip_version = 4               
  region = &amp;quot;${var.REGION}&amp;quot;              
}

resource &amp;quot;openstack_networking_router_v2&amp;quot; &amp;quot;router&amp;quot; {
  name = &amp;quot;router&amp;quot;
  admin_state_up = &amp;quot;true&amp;quot;
  region = &amp;quot;${var.REGION}&amp;quot;              
  external_gateway = &amp;quot;${var.external_gateway}&amp;quot;
}

resource &amp;quot;openstack_networking_router_interface_v2&amp;quot; &amp;quot;router&amp;quot; {
  router_id = &amp;quot;${openstack_networking_router_v2.router.id}&amp;quot;
  subnet_id = &amp;quot;${openstack_networking_subnet_v2.subnet.id}&amp;quot;
  region = &amp;quot;${var.REGION}&amp;quot;              
}

resource &amp;quot;openstack_compute_keypair_v2&amp;quot; &amp;quot;vakhov&amp;quot; {
  region = &amp;quot;${var.REGION}&amp;quot;              
  name = &amp;quot;vakhov&amp;quot;
  public_key = &amp;quot;...&amp;quot;
}

resource &amp;quot;openstack_blockstorage_volume_v1&amp;quot; &amp;quot;box01&amp;quot; {
  name = &amp;quot;disk-for-box01&amp;quot;
  region = &amp;quot;${var.REGION}&amp;quot;
  size = 150
  image_id = &amp;quot;${var.IMAGE_ID}&amp;quot;
  volume_type = &amp;quot;basic.${var.REGION}a&amp;quot;
}

resource &amp;quot;openstack_compute_instance_v2&amp;quot; &amp;quot;box01&amp;quot; {
  name = &amp;quot;box01&amp;quot;
  flavor_name = &amp;quot;${var.FLAVOR}&amp;quot;
  region = &amp;quot;${var.REGION}&amp;quot;
  key_pair = &amp;quot;vakhov&amp;quot;

  network {
    uuid = &amp;quot;${openstack_networking_network_v2.network.id}&amp;quot;
    floating_ip = &amp;quot;${var.BOX_01_FLOATING_IP}&amp;quot;
  }

  metadata = {
    &amp;quot;x_sel_server_default_addr&amp;quot;=&amp;quot;{\&amp;quot;ipv4\&amp;quot;:\&amp;quot;\&amp;quot;}&amp;quot;
  }

  block_device {
    boot_index = 0
    uuid = &amp;quot;${openstack_blockstorage_volume_v1.box01.id}&amp;quot;
    source_type = &amp;quot;volume&amp;quot;
    destination_type = &amp;quot;volume&amp;quot;
  }
}

resource &amp;quot;dnsimple_record&amp;quot; &amp;quot;box&amp;quot; {
  domain = &amp;quot;${var.DOMAIN}&amp;quot;
  name = &amp;quot;mega-box&amp;quot;
  value = &amp;quot;${openstack_compute_instance_v2.box01.network.0.floating_ip}&amp;quot;
  type = &amp;quot;A&amp;quot;
  ttl = 600
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Сорри, что без ката, но по-моему это божественно. Если вы натыкали хотя бы 10 проектов ручками, то
оцените &lt;img class=&#39;emoji&#39; title=&#39;:heart_eyes_cat:&#39; alt=&#39;:heart_eyes_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63b.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;. Конфигурировать таким образом инфраструктуру не только быстрее, но и гораздо
надежнее.&lt;/p&gt;

&lt;p&gt;В Селектеле есть несколько хитростей, которые его отличают от стандатного опенстека, описанного
в документации:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;авторизоваться нужно именно так, как в моем примере;&lt;/li&gt;
&lt;li&gt;флеворы в Селектеле создаются под каждый бокс отдельно (можно использовать один флевор для нескольких серверов) и они бездисковые, их можно создать заблаговременно с помощью &lt;code&gt;nova flavor-create&lt;/code&gt; как описано &lt;a href=&quot;https://habrahabr.ru/company/selectel/blog/242001/&quot;&gt;здесь&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;айдишники образов можно взять с помощью &lt;code&gt;glance image-list&lt;/code&gt; или из панели;&lt;/li&gt;
&lt;li&gt;и самое главное, добавьте в мета-информацию сервера поле &lt;code&gt;x_sel_server_default_addr = {&amp;quot;ipv4&amp;quot;:&amp;quot;&amp;quot;}&lt;/code&gt;, не спрашивайте зачем, так надо, иначе не будет работать сеть.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Вуаля. Теперь вы можете легко терраформить Селектел как вам нравится. А как вы создаете свою инфраструктуру?&lt;/p&gt;

        </description>
        <pubDate>Thu, 13 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/13/terraform-like-a-terraformer/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/13/terraform-like-a-terraformer/index.html</guid>
      </item>
    
      <item>
        <title>Автоматизация работы с проектами Селектела</title>
        <description>
          
          &lt;p&gt;Я хотел бы возможно написать пафосный туториал, как автоматизировать работу в облаке Селектела, но я не умею их писать. Поэтому скажу вот так -
в Селектеле кое-что легко автоматизировать, в некоторых местах есть хитрости, а кое-что сделать очень сложно или совсем нельзя.
Думаю, это очень точное описание.&lt;/p&gt;

&lt;p&gt;Итак, создать проект, поставить квоты, удалить проект (вот это мы не стали скриптовать, а удаляем через оболочку, где
есть дополнительное подтверждение, так как удаляется проект очень-очень быстро и может получиться очень-очень неловко),
добавить пользователей - все это прекрасно работает.
Список всех вызовов есть в разделе &lt;a href=&quot;https://support.selectel.ru/vpc/docs/&quot;&gt;документации&lt;/a&gt; (нужно залогинится).&lt;/p&gt;

&lt;p&gt;Далее великолепно работают все OpenStack-утилиты, как написано в &lt;a href=&quot;https://habrahabr.ru/company/selectel/blog/242001/&quot;&gt;блоге Селектела&lt;/a&gt;,
кроме &lt;code&gt;neutron&lt;/code&gt;, он почему-то не работает &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;. Возможно потому-что в 2015 году у них был один регион, а сейчас два. Но нейтрон нам и не понадобится.&lt;/p&gt;

&lt;p&gt;Чтобы легче работалось, 
я завернул утилиты в &lt;a href=&quot;https://github.com/uchiru/ostack/blob/master/Dockerfile&quot;&gt;докер образ&lt;/a&gt; и теперь вызываю вот так:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;docker run --rm -it &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -e &lt;span class=&quot;nv&quot;&gt;OS_AUTH_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://api.selvpc.ru/identity/v3 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -e &lt;span class=&quot;nv&quot;&gt;OS_PROJECT_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;... &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -e &lt;span class=&quot;nv&quot;&gt;OS_USER_DOMAIN_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;... &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -e &lt;span class=&quot;nv&quot;&gt;OS_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;... &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -e &lt;span class=&quot;nv&quot;&gt;OS_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;... &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -e &lt;span class=&quot;nv&quot;&gt;OS_REGION_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;... &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  uchiru/ostack:v2 glance image-list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;USER_DOMAIN_NAME&lt;/code&gt; - это аккаунт (номер договора), &lt;code&gt;PROJECT_ID&lt;/code&gt; - айди проекта, можно взять в панели (hex на 32 символа), &lt;code&gt;REGION_NAME&lt;/code&gt; -
&amp;#39;ru-1&amp;#39; - Санкт-Петербург (в Питере, тире, пить), &amp;#39;ru-2&amp;#39; - Москва, &lt;code&gt;LOGIN/PASSWORD&lt;/code&gt; - 
логин и пароль вашего пользователя в селектеле, которого нужно добавить в проект.&lt;/p&gt;

&lt;p&gt;Вот. Проект вы легко создадите скриптами или через панель, а завтра расскажу,
что с ним можно сделать дальше.&lt;/p&gt;

        </description>
        <pubDate>Wed, 12 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/12/selectel-new-project/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/12/selectel-new-project/index.html</guid>
      </item>
    
      <item>
        <title>Пройти не оставляя следа</title>
        <description>
          
          &lt;p&gt;В современном вебе дорого владеть чем-либо.
Представьте у вас есть сервер, клевый, гудит, мигает лампочками. Но это же очень дорого! Теперь вы полностью за него
отвечаете, за счета за электричества, за все его поломки, простои и так далее. Арендовать куда-как дешевле с точки зрения
поддержки.&lt;/p&gt;

&lt;p&gt;Вот сервер гудит в датацентре, за ним смотрят, меняют что-то там, заботяться. Но это все равно все очень дорого:
KVM, разметка томов,
сгорел блог питания, посыпались диски и прочее.&lt;/p&gt;

&lt;p&gt;В облаке гораздо лучшее, пару кликов - и через пару минут ssh-доступ, дистрибутив какой хотите, мощность по заказу. Заходите,
ставите пару пакетов... &lt;/p&gt;

&lt;p&gt;Стоп, все равно дорого! Лучше ставить пакеты ансиблом, готовить образы пакером, разворачивать контейнеры в ECS, делать все, чтобы
владеть как можно меньшим. В современном мире исходники на гитхабе и кредитка в кармане самый выгодный способ
поддерживать типовые проекты. Heroku, Amazon, Github, Firebase, PaaS, IaaS, сотни других букв - сейчас есть много способов делать
дела, не владея фактически ничем осязаемым, кроме кредитной карты.&lt;/p&gt;

&lt;p&gt;И я скажу, что мне это очень нравится. Современные IT-проекты - очень сложная штука и здорово, что вокруг создается полный
набор самостоятельных, зрелых технологий, благодаря которым можно развивать ключевую фишку продукта, а за остальное платить.
Например мой блог - исходники на гитхабе,
комментарии - дискус, хостинг - гитхаб пейджес, и только домен мой. И то я себя ругаю за малодушие, что испугался
вести блог на &lt;a href=http://avakhov.github.io&gt;avakhov.github.io&lt;/a&gt;. Чтобы хоть как-то скомпенсировать этот факт - перенес
домен с GoDaddy на Dnsimple. Владеть доменом в простом интерфейсе днсимпла психологически дешевле.&lt;/p&gt;

&lt;p&gt;PS. еще для ежедневной публикации постов приходится держать целый DigitalOcean дроплет за 5$ в месяц, единственная задача которого выполнить
крон-задачу в 7:23 каждый день. Не знаю как это сделать проще :(&lt;/p&gt;

        </description>
        <pubDate>Tue, 11 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/11/owner/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/11/owner/index.html</guid>
      </item>
    
      <item>
        <title>Еще одна неделя без картинок</title>
        <description>
          
          &lt;p&gt;Заболел &lt;img class=&#39;emoji&#39; title=&#39;:crying_cat_face:&#39; alt=&#39;:crying_cat_face:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63f.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;. Поэтому на этой неделе блог будет без картинок, так как сканирую я их
(о ужас) на офисном принтере.&lt;/p&gt;

        </description>
        <pubDate>Mon, 10 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/10/zabolel/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/10/zabolel/index.html</guid>
      </item>
    
      <item>
        <title>Длина агрумента в баш-функции</title>
        <description>
          
          &lt;p&gt;Еще один забавный момент из мира баш-программирования. Экспериментировал я тут с эластиком и передавал полученный JSON на пост-обработку в функцию, примерно так:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; process &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;s2&quot;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;curl ...&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
process out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Начиная с некоторого значения JSON стал приходить неполный и jq соответственно не мог его распарсить. Оказывается есть ограничение,
нашел как обычно на &lt;a href=&quot;http://stackoverflow.com/questions/19354870/bash-command-line-and-input-limit&quot;&gt;stackoverflow&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ getconf ARG_MAX    # Get argument limit in bytes
# =&amp;gt; 262144
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Так что не нужно передавать агрументы длиннее 260 килобайт &lt;img class=&#39;emoji&#39; title=&#39;:scream_cat:&#39; alt=&#39;:scream_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f640.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;.&lt;/p&gt;

        </description>
        <pubDate>Mon, 10 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/10/bash-size/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/10/bash-size/index.html</guid>
      </item>
    
      <item>
        <title>Р - Регулярность</title>
        <description>
          
          &lt;p&gt;Этим летом как-то я приуныл, работа-дом-работа-дом и решил заняться личностным ростом, вот прямо так. Окинув жизненный опыт,
а в 32 года уже обычно есть что окидывать, нашел одну закономерность. В тех делах был приятный результат,
где я занимался чем-то регулярно.
Из публичный вещей, это пожалуй комиты в рейлс. Я три месяца тратил на рейлс каждый день по 2-3 часа, включая выходные. В итоге
попал в топ-50 контрибьютеров (за три года правда скатился в топ-100).
В принципе с тех пор рейлс больше не учил, но тогда хорошо постарался, до сих
пор помогает.&lt;/p&gt;

&lt;p&gt;Поэтому я решил попробовать заменить спонтанную регулярность, на сознательную регулярность. Ну уже кстати есть первые результаты,
не скажу, что жизнь стала как бутон розы, но точно приятней. За два месяца я сделал две вещи: пробежал программу 5K Runner от
&lt;a href=http://www.fitness22.com&gt;fitness22&lt;/a&gt; и решил вести технический блог не меньше года, по истории каждый рабочий день.&lt;/p&gt;

&lt;p&gt;По раннеру получился пробег 114 км, прямо как спорткар с нуля до сотни за два месяца &lt;img class=&#39;emoji&#39; title=&#39;:smile:&#39; alt=&#39;:smile:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f604.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;. Просто оставлю здесь скриншоты первого
и последнего занятий:&lt;/p&gt;

&lt;p&gt;&lt;img src=/assets/2/regular/b.png width=300px&gt;
&lt;img src=/assets/2/regular/a.png width=300px&gt;&lt;/p&gt;

&lt;p&gt;Также опубликовал 42 поста с момента возрождения блога, то есть почти столько же, сколько за 3 года
до этого в сумме. Кстати очень помогает публичный контракт с вами, я заявил сроки, регулярность, теперь не отвертеться.
На самом деле зная себя, отвертеться можно и очень просто, но у меня еще есть серия трюков, которая, надеюсь поможет
не сойти с трассы. При случае расскажу. До встречи &lt;img class=&#39;emoji&#39; title=&#39;:smiley_cat:&#39; alt=&#39;:smiley_cat:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f63a.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;

        </description>
        <pubDate>Fri, 07 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/07/regular/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/07/regular/index.html</guid>
      </item>
    
      <item>
        <title>Кто пишет в базу?</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/db-optim/main.jpg&quot; /&gt;
          &lt;p&gt;Если база уперлась в диск по записи, то наверняка сайт ляжет. И помимо подкрутки собственно конфигурации
важно
узнать куда идет запись - уменьшить ее или вынести в другую базу.
На постгресе есть простой способ выяснить какие таблицы дают наибольшую
нагрузку.&lt;/p&gt;

&lt;p&gt;Под вашим привычным трафиком сбрасываете счетчики статистики с помощью команды
&lt;code&gt;select pg_stat_reset()&lt;/code&gt;.
Потом смотрите какие таблицы лидеры по записи:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_tup_ins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_tup_upd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_tup_del&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_tup_ins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_tup_upd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_tup_del&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_user_tables&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Скорее всего этой информации вам хватит для первой оптимизации.&lt;/p&gt;

        </description>
        <pubDate>Thu, 06 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/06/db-optim/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/06/db-optim/index.html</guid>
      </item>
    
      <item>
        <title>Мне нужен recent</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/recent/main.jpg&quot; /&gt;
          &lt;p&gt;Совсем не про программирование, а про инвентаризацию привычек. Как и любой человек старой школы я
люблю раскладывать файлы по папкам. Я правда не очень организованный и в дропбоксе есть директории &lt;code&gt;acrhive01&lt;/code&gt;,
&lt;code&gt;_old&lt;/code&gt;, &lt;code&gt;папка2&lt;/code&gt; и подобные, но тем не менее с какой-то периодичностью садился и пытался навести
в файлах порядок.&lt;/p&gt;

&lt;p&gt;Однако относительно недавно нашел очарование вкладки &lt;code&gt;Recent&lt;/code&gt; в гугл драйве и сортировки по дате
создания на диске. Оказывается в подавляющем большинстве случаев мне нужен документ или файл из первой
десятки просмотренных недавно! Теперь я просто швыряю новую папку или документ прямо в корень
(облако, оно же резиновое)
и не трачу силы на поиск правильного места и правильного названия. Только чуть-чуть мучает совесть, но
жить можно.&lt;/p&gt;

&lt;p&gt;Так и в профессии, стараюсь время от времени пересматривать свои взгляды и привычки, вдруг они уже устарели.&lt;/p&gt;

        </description>
        <pubDate>Wed, 05 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/05/recent/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/05/recent/index.html</guid>
      </item>
    
      <item>
        <title>Безумие баш скриптов</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/crazy-bash/main.jpg&quot; /&gt;
          &lt;p&gt;Я люблю маленькие баш-скрипты. Это нативный, быстрой способ что-то автоматизировать, посчитать
или сделать. Баш - полноценный язык программирования, хотя и с специфическим синтаксисом. Однако
есть одна вещь, которая меня полностью убивает, не знаю зачем так сделано, даже гуглить не буду,
может быть кто-нибудь в комментариях ответит.&lt;/p&gt;

&lt;p&gt;Итак, интерпретатор баша исполняет скрипт строчка за строчкой и если поменять файл во время исполнения
долгого скрипта, то эффект будет не предсказуемым. Это полностью ломает привычный шаблон разработчика,
когда запустил программу и в этот момент меняешь код для следующего запуска. Я на этом попадался
несколько раз и каждый раз был в шоке.&lt;/p&gt;

&lt;p&gt;Самый простой пример, который смог сходу придумать:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# x.sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;sleep &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &amp;gt;&amp;gt; x.sh
&lt;span class=&quot;nb&quot;&gt;echo echo &lt;/span&gt;hello &amp;gt;&amp;gt; x.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Так вот, если запустить &lt;code&gt;bash x.sh&lt;/code&gt;, то он выведет &lt;code&gt;hello&lt;/code&gt;! WTF? Не знаю.&lt;/p&gt;

        </description>
        <pubDate>Tue, 04 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/04/crazy-bash/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/04/crazy-bash/index.html</guid>
      </item>
    
      <item>
        <title>Хороший пул реквест</title>
        <description>
          &lt;img src=&quot;http://vakhov.me/assets/2/github/main.jpg&quot; /&gt;
          &lt;p&gt;У нас есть негласное правило, что пул реквест должен хорошо выглядит
в веб-интерфейсе гитхаба. Мне кажется это отличное соглашение, благодаря которому
вводится несколько компромиссов,
из-за которых иначе могут возникать споры.&lt;/p&gt;

&lt;p&gt;Для начала ширина кода фиксируется на 140 символов, чтобы не было горизонтального скролла. Далее устанавливается
очень разумное ограничение на количество одновременных изменений. Я не изучал точно как работает алгоритм гитхаба, но
при попытке изменить слишком много файлов одновременно, он покажет только часть. Также не смотрим пул реквесты,
которые не мержатся автоматически в мастер или у которых тесты красные (мы работаем по гитхаб-флоу
и положительное ревью означает, что код может оказаться на продакшене через несколько минут, поэтому важно чтобы он был готов).&lt;/p&gt;

&lt;p&gt;Более глубоким эффектом оказывается разделение рефакторинга и нового функционала. Если например меняется отступ в больших
массивах кода, а это часто бывает при рефакторинге, то будет много красного и много зеленого. И уже не хочется в эти
изменения что-то добавлять еще, так как пул реквест станет не читаемым. Поэтому все массивные изменения всегда идут отдельными
пул реквестами, что сильно уменьшает влияние человеческого фактора.&lt;/p&gt;

&lt;p&gt;Пожалуй самое забавное, что через некоторое время
формируется ощущение, что полностью зеленые или полностью красные пул реквесты, более безопасные, чем полосатые. К полосатым -
всегда повышенное внимание.&lt;/p&gt;

        </description>
        <pubDate>Mon, 03 Oct 2016 00:00:00 +0300</pubDate>
        <link>http://vakhov.me/blog/2016/10/03/github/index.html</link>
        <guid isPermaLink="true">http://vakhov.me/blog/2016/10/03/github/index.html</guid>
      </item>
    
  </channel>
</rss>
