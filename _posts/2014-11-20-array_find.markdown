---
title: Неведомый Array#find
image: /assets/array_find.jpg
---
Полагаясь на интуицию, как делаю в 90% случаев, программируя на Руби, я написал проверку
наличия элемента в массиве `array.find(5) ? 'success' : 'fail'` и с удивлением
узнал, что это не работает.

Документация нам подсказывает [<i class="fa fa-external-link"></i>](http://ruby-doc.org/core-2.1.3/Enumerable.html#method-i-find), что `find` вернет `Enumerator` если блок не задан.

``` ruby
[1, 2, 3].find(4)  # =>  #<Enumerator: [1, 2, 3]:find(4)>
```

Любой объект в руби - это `true`, поэтому конструкция из вступления будет всегда возвращать
`success`. Есть несколько способов исправить ситуацию.

Использовать блочную версию `find` (не очень изящно, но работает):

``` ruby
[1, 2, 3].find { |x| x == 4 }  # =>  nil
```

Использовать метод `index` или `include?` (я так делаю, когда пишу на чистом руби): 

``` ruby
[1, 2, 3].index(4)     # =>  nil
[1, 2, 3].include?(4)  # =>  false
```

В Рейлс (или когда просто подключен `ActiveSupport`) еще есть метод `#in?`
[<i class="fa fa-external-link"></i>](http://api.rubyonrails.org/classes/Object.html#method-i-in-3F),
позволяющий иногда сделать код более читаемым:

``` ruby
array = [1, 2, 3]
4.in?(array)       # =>  false
```

На один неправильный вариант использования `find`, есть много правильных.
