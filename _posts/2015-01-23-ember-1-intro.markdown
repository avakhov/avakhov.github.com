---
title: Ember.js - 1. Введение
image: /assets/ember-1-intro.jpg
---
Говорят, что у Ember.js кривая обучения крутовата. Категорически с этим не соглашусь.

На самом деле обучение Ember.js - это глубокий темный колодец, в котором сидишь на дне и воешь от
отчаяния. Но когда я немного разобрался, Эмбер начал мне нравится, даже сказал бы, что
я его полюбил. Это действительно очень достойная и перспективная разработка.

Я хочу посвятить несколько выпусков работе с этим замечательным
фреймворком.
Не знаю, что в итоге получится, пока планирую, что мы
зайдем немного с другой стороны, чем предлагается в официальных гайдах. Выпуски
про Эмбер будут перемежаться с другими, более привычными темами про Руби, Рейлс и все такое,
чтобы было веселее.
Для успешной работы нам понадобится
Node.js (я поставил через `ndenv` по аналогии с моим любимым `rbenv`) и
[Ember-cli](http://www.ember-cli.com/) - это тру-способ организации проекта.

Для начала хочу отметить, что в Эмбере все наследуется от `Ember.Object`, основная фишка
которого, это возможность установить свойство через `set` и взять его через `get`. Всегда
пользуйтесь этими методами. В качестве бонуса за непривычный синтаксис вы получите
computed-свойста, вычисляемые реактивно, обзерверы, следящие за измененим свойств и
всякие другие любопытные штуки. Создавать объект следует через `create`:

``` javascript
var Person = Ember.Object.extend({
  fullName: function() {
    return this.get("name") + " " + this.get("surName");
  }.property("name", "surName")
});

var alex = Person.create(name: "Alexey");
console.log(alex.get("fullName")); // => "Alexey "

alex.set("surName", "Vakhov");
console.log(alex.get("fullName")); // => "Alexey Vakhov"
```

Подробнее можно прочитать в разделе [The Object Model](http://emberjs.com/guides/object-model/classes-and-instances/)
официальной документации.

На сегодня все, до новых встреч!
